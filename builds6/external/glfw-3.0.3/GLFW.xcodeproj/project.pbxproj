// !$*UTF8*$!
{
       archiveVersion = 1;
       classes = {
       };
       objectVersion = 46;
       objects = {

/* Begin PBXAggregateTarget section */
              7EBC3749A114474EA14E9D7A /* ALL_BUILD */ = {
                     isa = PBXAggregateTarget;
                     buildConfigurationList = B20461FC886049B4BB9853F3 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */;
                     buildPhases = (
                            D94232E5826D42CC83DCE56E /* CMake Rules */,
                     );
                     dependencies = (
                            F51F00C8623C4E20A3642A12 /* PBXTargetDependency */,
                            E175020E85EF481F90A5E8D4 /* PBXTargetDependency */,
                            27E1165070E64E4391E19044 /* PBXTargetDependency */,
                            BC7BA7AAE31545D0AA6E49A6 /* PBXTargetDependency */,
                            3A0E1FAD83B243738E181B56 /* PBXTargetDependency */,
                            F308147CF6FD4833AE662E5F /* PBXTargetDependency */,
                            4D762EE471AA4ED4B7C13CE1 /* PBXTargetDependency */,
                            943F185884604E51BDB3ABE2 /* PBXTargetDependency */,
                            B056037C5A784DFB9F34E2B1 /* PBXTargetDependency */,
                            2FADC1626B2E4338BA50B28A /* PBXTargetDependency */,
                            C08D77E2FCCC4A84848C9CEC /* PBXTargetDependency */,
                            1F14BB33CDBA4EBD8F4C3036 /* PBXTargetDependency */,
                            B75DF6C9D0794C4AB0F30C13 /* PBXTargetDependency */,
                            A490241011364C198D9089F0 /* PBXTargetDependency */,
                            9205E416DB49408F88E98604 /* PBXTargetDependency */,
                            9F8D1CB7E7A34455B254AB35 /* PBXTargetDependency */,
                            C2819CD602AC48F48847FA68 /* PBXTargetDependency */,
                            39A3C14FA9FD44B0AC8B0371 /* PBXTargetDependency */,
                            0F0E1CBF44BB48809D5EED76 /* PBXTargetDependency */,
                            16442DB1131B4F5DBC3DB0A2 /* PBXTargetDependency */,
                            34C50E5FC7AE4B6F8FC53D7A /* PBXTargetDependency */,
                            E5C2902FC4144DD6909F055F /* PBXTargetDependency */,
                            7817716A3F5341FAA26F55E6 /* PBXTargetDependency */,
                            22B3880C143D4E6DAB1178E9 /* PBXTargetDependency */,
                     );
                     name = ALL_BUILD;
                     productName = ALL_BUILD;
              };
              565FCA07EDD644728D3B8205 /* ZERO_CHECK */ = {
                     isa = PBXAggregateTarget;
                     buildConfigurationList = EAC14C2A29AA4D27AF4F03BB /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */;
                     buildPhases = (
                            6AF8C84C65954E31B3499C0C /* CMake Rules */,
                     );
                     dependencies = (
                     );
                     name = ZERO_CHECK;
                     productName = ZERO_CHECK;
              };
              48883AE2A5A147D7843552E8 /* install */ = {
                     isa = PBXAggregateTarget;
                     buildConfigurationList = 793A34ACA662454E8948B306 /* Build configuration list for PBXAggregateTarget "install" */;
                     buildPhases = (
                            069CD46DB3684CFB9827541A /* CMake PostBuild Rules */,
                     );
                     dependencies = (
                            4AE3E1F2C85140958330ECCA /* PBXTargetDependency */,
                     );
                     name = install;
                     productName = install;
              };
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
F7E5909B66D748B8A4866D7F /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/src/config.h */ = {isa = PBXBuildFile; fileRef = D458B0E680174182B30A16CE /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/src/config.h */; settings = { COMPILER_FLAGS = ""; }; };
65D9FF54207A4B00A473F076 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include/GLFW/glfw3.h */ = {isa = PBXBuildFile; fileRef = C68516E065AE45C98714BCB1 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include/GLFW/glfw3.h */; settings = { COMPILER_FLAGS = ""; }; };
1A43E90CFFA542299807331D /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include/GLFW/glfw3native.h */ = {isa = PBXBuildFile; fileRef = 4307BBE2928A498A8960B847 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include/GLFW/glfw3native.h */; settings = { COMPILER_FLAGS = ""; }; };
1C226CFACB784F1A9C59DA3E /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = F53F64E66A73460F853F448F /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/CMakeLists.txt */; settings = { COMPILER_FLAGS = ""; }; };
35E5614527C840DC8B2D7003 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/clipboard.c */ = {isa = PBXBuildFile; fileRef = D6D0FBFB3EC44FC38A31C7CE /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/clipboard.c */; settings = { COMPILER_FLAGS = ""; }; };
AE43DC5058EB4449BAE30690 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_clipboard.m */ = {isa = PBXBuildFile; fileRef = 8E3CAEB1C3FB49B78159A949 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_clipboard.m */; settings = { COMPILER_FLAGS = ""; }; };
797404AC69C84F9389B6CD86 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_gamma.c */ = {isa = PBXBuildFile; fileRef = 8D729234D8BE460DA5B90C4A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_gamma.c */; settings = { COMPILER_FLAGS = ""; }; };
EF0549E966B84AB181EC23C7 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_init.m */ = {isa = PBXBuildFile; fileRef = 3A2A546E5C8541BDAF391F67 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_init.m */; settings = { COMPILER_FLAGS = ""; }; };
4512AE56EF0344C088DC1C07 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_joystick.m */ = {isa = PBXBuildFile; fileRef = FDAEDA7C80D44A89849189EF /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_joystick.m */; settings = { COMPILER_FLAGS = ""; }; };
1A9B77DD85B14785A67DE555 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_monitor.m */ = {isa = PBXBuildFile; fileRef = 88B270453D7A4757AFEEE458 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_monitor.m */; settings = { COMPILER_FLAGS = ""; }; };
145B169233764C7B86FD3FAB /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_platform.h */ = {isa = PBXBuildFile; fileRef = 56BD4A3976634DFE8D1D1E7C /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_platform.h */; settings = { COMPILER_FLAGS = ""; }; };
9718195DC1BC44419341F590 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_time.c */ = {isa = PBXBuildFile; fileRef = 288640748B8C481E9E48E3BB /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_time.c */; settings = { COMPILER_FLAGS = ""; }; };
F95FA152908144DC94D3DBC2 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_window.m */ = {isa = PBXBuildFile; fileRef = 4E3E02C5731E4A958AD2CC85 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_window.m */; settings = { COMPILER_FLAGS = ""; }; };
00868521671843B3912CBDFC /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/context.c */ = {isa = PBXBuildFile; fileRef = ACD2247E6BEC472DAFC4342B /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/context.c */; settings = { COMPILER_FLAGS = ""; }; };
2D6D5F4243CF4F7FB6152B1D /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/gamma.c */ = {isa = PBXBuildFile; fileRef = 8F22CF4C01CF43C5B4FD5CC1 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/gamma.c */; settings = { COMPILER_FLAGS = ""; }; };
0FFD15C07EDF4AB0B0DFFF00 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/init.c */ = {isa = PBXBuildFile; fileRef = 658E0C76726943FA92495B47 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/init.c */; settings = { COMPILER_FLAGS = ""; }; };
748A776DFA6C4E63A6572B96 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/input.c */ = {isa = PBXBuildFile; fileRef = C12FB198388240758263BF47 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/input.c */; settings = { COMPILER_FLAGS = ""; }; };
1ABABBB4472D4901ADE13671 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/internal.h */ = {isa = PBXBuildFile; fileRef = A77C59BB3C2240DE8B058971 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/internal.h */; settings = { COMPILER_FLAGS = ""; }; };
46443832E5A549DB8CC8DB91 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/joystick.c */ = {isa = PBXBuildFile; fileRef = 89F09F3D9E324D3C9205A01D /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/joystick.c */; settings = { COMPILER_FLAGS = ""; }; };
D6FC8D247D224571A37FC02B /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/monitor.c */ = {isa = PBXBuildFile; fileRef = FAA5C0A1A0914F9DBB3A0501 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/monitor.c */; settings = { COMPILER_FLAGS = ""; }; };
AD4BEFE16216439794938CAA /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/nsgl_context.m */ = {isa = PBXBuildFile; fileRef = 5842864AA3634D7198B4780B /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/nsgl_context.m */; settings = { COMPILER_FLAGS = ""; }; };
1D0CC96FB55A4D6C91C45793 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/nsgl_platform.h */ = {isa = PBXBuildFile; fileRef = F1CB2D9BB8884DB8AF396176 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/nsgl_platform.h */; settings = { COMPILER_FLAGS = ""; }; };
AF09F895C8414F1B84740DC5 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/time.c */ = {isa = PBXBuildFile; fileRef = 8B174164A2A64EC181A1A215 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/time.c */; settings = { COMPILER_FLAGS = ""; }; };
7EBBC28DF5734D11A9140CD7 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/window.c */ = {isa = PBXBuildFile; fileRef = ED81ECC0FAD2456084CC5504 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/window.c */; settings = { COMPILER_FLAGS = ""; }; };
D855CD479E2646A0BDD2DFF1 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Boing.dir/Info.plist */ = {isa = PBXBuildFile; fileRef = 19AC01079A3743D595182F00 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Boing.dir/Info.plist */; settings = { COMPILER_FLAGS = ""; }; };
DE6D8D29718D4316A30A18E4 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = B1A7A9A180CC4D35959053AF /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/CMakeLists.txt */; settings = { COMPILER_FLAGS = ""; }; };
2FFC11013DDD4780BE9248AD /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/boing.c */ = {isa = PBXBuildFile; fileRef = 609F389F3DC544E58778CD5A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/boing.c */; settings = { COMPILER_FLAGS = ""; }; };
EE48823C00354DD8820B138E /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Gears.dir/Info.plist */ = {isa = PBXBuildFile; fileRef = 581A1E945DB4493DAF375C50 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Gears.dir/Info.plist */; settings = { COMPILER_FLAGS = ""; }; };
F013880A805147AEA88D7B4C /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 63B68E93512C45328C13A4DB /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/CMakeLists.txt */; settings = { COMPILER_FLAGS = ""; }; };
D29211CCF29C4920BB624444 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/gears.c */ = {isa = PBXBuildFile; fileRef = 9F6538F3DA644FF0AFF73649 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/gears.c */; settings = { COMPILER_FLAGS = ""; }; };
E13506D40FAC41E391CD17C9 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Simple.dir/Info.plist */ = {isa = PBXBuildFile; fileRef = 12ABFE9B76A74ECA97E3BF46 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Simple.dir/Info.plist */; settings = { COMPILER_FLAGS = ""; }; };
56DB7F8F349B49AA8FA7E697 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = F0C46D6FDF5C4887AD26272D /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/CMakeLists.txt */; settings = { COMPILER_FLAGS = ""; }; };
C1DE12EE07F94C878393AEA5 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/simple.c */ = {isa = PBXBuildFile; fileRef = 49A1DE549F2745CD92A498A0 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/simple.c */; settings = { COMPILER_FLAGS = ""; }; };
FE5BB3C242D44617BC4E205C /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Split View.dir/Info.plist */ = {isa = PBXBuildFile; fileRef = 2191ACE1C1844344A1A1DAD9 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Split View.dir/Info.plist */; settings = { COMPILER_FLAGS = ""; }; };
0EFCCF1CCB3244F5A7C426CD /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = D847059C783041AD9E8841C2 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/CMakeLists.txt */; settings = { COMPILER_FLAGS = ""; }; };
41E0CF62FFAE488EAF227E02 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/splitview.c */ = {isa = PBXBuildFile; fileRef = BEFEA5B212A24DA7B63F7387 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/splitview.c */; settings = { COMPILER_FLAGS = ""; }; };
8483C536171A4C57A0E32C70 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Wave.dir/Info.plist */ = {isa = PBXBuildFile; fileRef = B6BE1A050E4846A7B01EF009 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Wave.dir/Info.plist */; settings = { COMPILER_FLAGS = ""; }; };
66FCE7146CBC46228F0B3036 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = A42F75D96B3945EF8CB5409D /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/CMakeLists.txt */; settings = { COMPILER_FLAGS = ""; }; };
D1D50FB8CC364918AA8234F5 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/wave.c */ = {isa = PBXBuildFile; fileRef = D4C8D87C80784E33ACC1DA59 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/wave.c */; settings = { COMPILER_FLAGS = ""; }; };
1A9FDAB235AA4796AD5CD794 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/accuracy.dir/Info.plist */ = {isa = PBXBuildFile; fileRef = 49441CBAF3C64A6E86228017 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/accuracy.dir/Info.plist */; settings = { COMPILER_FLAGS = ""; }; };
A128F1C137BA477B9BB3DCB4 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = A87E402EC1974E6BA488B2E0 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */; settings = { COMPILER_FLAGS = ""; }; };
DAFA36B7A64B4CEA91DB8855 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/accuracy.c */ = {isa = PBXBuildFile; fileRef = 008DA4C213CE410CA39BB411 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/accuracy.c */; settings = { COMPILER_FLAGS = ""; }; };
76D885D521004303BDD8AA1C /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */ = {isa = PBXBuildFile; fileRef = 224445E02D374C51BBA632DE /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */; settings = { COMPILER_FLAGS = ""; }; };
E7E5C9C5C07E4F2C884B0276 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */ = {isa = PBXBuildFile; fileRef = BF5A5C4C028C4A118C9D22A7 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */; settings = { COMPILER_FLAGS = ""; }; };
357F82FE8407414F97685CAF /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = A3D00A83672D43A79827484C /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */; settings = { COMPILER_FLAGS = ""; }; };
E8B9D0977BEA4B62853E1170 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/clipboard.c */ = {isa = PBXBuildFile; fileRef = 7A56D0A2750141F6BA4271D7 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/clipboard.c */; settings = { COMPILER_FLAGS = ""; }; };
2C0E2CF8CE5742408AAB70D5 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 1FB06523D8794C0EAB59FF04 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */; settings = { COMPILER_FLAGS = ""; }; };
93682890B8C641D0B6BB3D06 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/defaults.c */ = {isa = PBXBuildFile; fileRef = 5A7C940FD87344A4AE7ECF99 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/defaults.c */; settings = { COMPILER_FLAGS = ""; }; };
A825F95626034A75B97720B0 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = B9D36EEDDFA4442DBC2932D9 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */; settings = { COMPILER_FLAGS = ""; }; };
B81E372015F54EA581845640 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/events.c */ = {isa = PBXBuildFile; fileRef = 3EB6C57739E542E1971E52D5 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/events.c */; settings = { COMPILER_FLAGS = ""; }; };
0CAED6B3649B4782BF2BCAE9 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */ = {isa = PBXBuildFile; fileRef = 2738F93EF89F4D9E85AE128A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */; settings = { COMPILER_FLAGS = ""; }; };
5DE76B905EB64AD59FF7A334 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */ = {isa = PBXBuildFile; fileRef = 5A901410AB8044DD801278FB /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */; settings = { COMPILER_FLAGS = ""; }; };
55228770E28648BDBC883526 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 652BA6DF51FE4C3C9D81C041 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */; settings = { COMPILER_FLAGS = ""; }; };
A4B9283CF68C4B5FAE340B0A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/fsaa.c */ = {isa = PBXBuildFile; fileRef = 6C84ADE166A34BA5959D4386 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/fsaa.c */; settings = { COMPILER_FLAGS = ""; }; };
33CE0A2732094FC497989473 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */ = {isa = PBXBuildFile; fileRef = 45635B98A510466D890A4B24 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */; settings = { COMPILER_FLAGS = ""; }; };
97B165F6B7904D048FF88DD6 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */ = {isa = PBXBuildFile; fileRef = F5346B79551847259A215AE7 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */; settings = { COMPILER_FLAGS = ""; }; };
53DDEF37300343C3978C4591 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 5FAEB4A8D5424BD4B4EACCE3 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */; settings = { COMPILER_FLAGS = ""; }; };
245B9520984C49CFA9E67C71 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/gamma.c */ = {isa = PBXBuildFile; fileRef = FDEF2B8419BF4600AC8F2F9D /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/gamma.c */; settings = { COMPILER_FLAGS = ""; }; };
EC907FCA37B94515B054EC16 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */ = {isa = PBXBuildFile; fileRef = DCF985D4E54241978C84882F /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */; settings = { COMPILER_FLAGS = ""; }; };
892FC2A4BBFE4908A8CDAD3B /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */ = {isa = PBXBuildFile; fileRef = 1EE96422EECF4AB99B2B018D /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */; settings = { COMPILER_FLAGS = ""; }; };
C401AF19C8C64A3889911AB4 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = A15DBCEC57334201875E1879 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */; settings = { COMPILER_FLAGS = ""; }; };
67F0112684124C23BAD40FA1 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/glfwinfo.c */ = {isa = PBXBuildFile; fileRef = E7B447F448DA4FB88BA66BE7 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/glfwinfo.c */; settings = { COMPILER_FLAGS = ""; }; };
6908A9D923FD479A81FCD1D1 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */ = {isa = PBXBuildFile; fileRef = C78F93CBF353476AADADB7ED /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */; settings = { COMPILER_FLAGS = ""; }; };
7DDFB4E2F76D4E3A865AE04C /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */ = {isa = PBXBuildFile; fileRef = 914E465AF23F4D8B9A4B6E79 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */; settings = { COMPILER_FLAGS = ""; }; };
6650B073A7934C5184A06B7F /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = F44A70916C4D409582875B32 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */; settings = { COMPILER_FLAGS = ""; }; };
351FF5732801418E83E7FDA3 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/iconify.c */ = {isa = PBXBuildFile; fileRef = 2C67DF2971D44ACE8E9D8499 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/iconify.c */; settings = { COMPILER_FLAGS = ""; }; };
A36C467EFF7F413BAED37148 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 91E0E916A79C4121A8136D71 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */; settings = { COMPILER_FLAGS = ""; }; };
E3405EDF2D944C938C2011B0 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/joysticks.c */ = {isa = PBXBuildFile; fileRef = 9F38A75A12994C9EA265FC80 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/joysticks.c */; settings = { COMPILER_FLAGS = ""; }; };
A1AE7E2081954B88805DA98C /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */ = {isa = PBXBuildFile; fileRef = 6005FF0775EB4BF8A433DC03 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */; settings = { COMPILER_FLAGS = ""; }; };
56C2D2379C1C420D98323451 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */ = {isa = PBXBuildFile; fileRef = 4E575987909147F4A4E75901 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */; settings = { COMPILER_FLAGS = ""; }; };
119FD470F8324AEC82D5EE4E /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 875149D6852E4AA5B52CC72A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */; settings = { COMPILER_FLAGS = ""; }; };
574DACD16796416BBFF5B215 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/modes.c */ = {isa = PBXBuildFile; fileRef = 63E3BDF64B3B412E99D37771 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/modes.c */; settings = { COMPILER_FLAGS = ""; }; };
6B3971FC05804830ADC605D0 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = C79DCDFB2D29404C836760CD /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */; settings = { COMPILER_FLAGS = ""; }; };
7F30DD7282564ADBA1A72A24 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/peter.c */ = {isa = PBXBuildFile; fileRef = CC1B0E720C1948F2892078A2 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/peter.c */; settings = { COMPILER_FLAGS = ""; }; };
43C05B18156A4AE38147CE53 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 7BFC8BAA49BD4041B32E0325 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */; settings = { COMPILER_FLAGS = ""; }; };
DDC3206BF09746019767A49F /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/reopen.c */ = {isa = PBXBuildFile; fileRef = 9975646A15894F03A48246C7 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/reopen.c */; settings = { COMPILER_FLAGS = ""; }; };
4F9B7FEA0A9E40AD955485FF /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/sharing.dir/Info.plist */ = {isa = PBXBuildFile; fileRef = 4063F53D4625467EA60BC12F /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/sharing.dir/Info.plist */; settings = { COMPILER_FLAGS = ""; }; };
4D9F762FAF13410C97862E04 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = E23806F582B64DED884666FB /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */; settings = { COMPILER_FLAGS = ""; }; };
EE9B0862D5514A5C83E87F2A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/sharing.c */ = {isa = PBXBuildFile; fileRef = 5CA1D04A9A5142728E91B6B5 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/sharing.c */; settings = { COMPILER_FLAGS = ""; }; };
B5D6F301813A4D269471A2B8 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/tearing.dir/Info.plist */ = {isa = PBXBuildFile; fileRef = F88D628EF0094B369A12BA5A /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/tearing.dir/Info.plist */; settings = { COMPILER_FLAGS = ""; }; };
FC686496C8934D1AB7AAE46C /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 374B444F63A1494989C28EC2 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */; settings = { COMPILER_FLAGS = ""; }; };
0E003B54CEFF43AE8FF6AA04 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/tearing.c */ = {isa = PBXBuildFile; fileRef = CEAC89F73E214272AB3BA33F /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/tearing.c */; settings = { COMPILER_FLAGS = ""; }; };
A74B9DAD550F4C5EB30D6479 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/threads.dir/Info.plist */ = {isa = PBXBuildFile; fileRef = DED0E57CC45C40838BF346DC /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/threads.dir/Info.plist */; settings = { COMPILER_FLAGS = ""; }; };
D43A4B867977407ABFFD3F18 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/tinycthread.c */ = {isa = PBXBuildFile; fileRef = 0D910BB07E274253A5754EB1 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/tinycthread.c */; settings = { COMPILER_FLAGS = ""; }; };
FF04ECA22A6D4BEAAFED01B4 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/tinycthread.h */ = {isa = PBXBuildFile; fileRef = DE826CB54C5040ED96E72E9A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/tinycthread.h */; settings = { COMPILER_FLAGS = ""; }; };
0431F559D1694229A26452E6 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = E71FD2C7A1E146ACB8C9A3D7 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */; settings = { COMPILER_FLAGS = ""; }; };
C1DBB5E9066D4DA39C995C9B /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/threads.c */ = {isa = PBXBuildFile; fileRef = CB64365B666C4AF5A15E983D /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/threads.c */; settings = { COMPILER_FLAGS = ""; }; };
89123336163C4A21BC32B393 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/title.dir/Info.plist */ = {isa = PBXBuildFile; fileRef = 4390D1031DB648C3A6B456D4 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/title.dir/Info.plist */; settings = { COMPILER_FLAGS = ""; }; };
DE767CEA02184311B2DC79C8 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 85C7169E66944B238887367A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */; settings = { COMPILER_FLAGS = ""; }; };
BFFD4C6644EA4EF2AAF3F42F /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/title.c */ = {isa = PBXBuildFile; fileRef = D230095221D2438BA60C9F1A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/title.c */; settings = { COMPILER_FLAGS = ""; }; };
C8C223D4F5B04E7DB277B4EB /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/windows.dir/Info.plist */ = {isa = PBXBuildFile; fileRef = 4608AF5F489B4F709DDD7D6A /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/windows.dir/Info.plist */; settings = { COMPILER_FLAGS = ""; }; };
D70B0C9F09C148CEA2250AD8 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXBuildFile; fileRef = 1801A86A665646BA865FCA59 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */; settings = { COMPILER_FLAGS = ""; }; };
D6A50FF096324064954A40BA /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/windows.c */ = {isa = PBXBuildFile; fileRef = F5C6A45BF0E242E18694D0C8 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/windows.c */; settings = { COMPILER_FLAGS = ""; }; };
/* End PBXBuildFile section */

/* Begin PBXBuildStyle section */
              6454689CD26B425F86BF102A /*  */ = {
                     isa = PBXBuildStyle;
              };
              737EE10EBCAC4D20AE8552D4 /* Debug */ = {
                     isa = PBXBuildStyle;
                     buildSettings = {
                            COPY_PHASE_STRIP = NO;
                     };
                     name = Debug;
              };
              74D05C265FAB4F2097877432 /* Release */ = {
                     isa = PBXBuildStyle;
                     buildSettings = {
                            COPY_PHASE_STRIP = NO;
                     };
                     name = Release;
              };
              D2A8BCA0DBF74CC7BE1BE667 /* MinSizeRel */ = {
                     isa = PBXBuildStyle;
                     buildSettings = {
                            COPY_PHASE_STRIP = NO;
                     };
                     name = MinSizeRel;
              };
              1CC336D5604C41F7907AAE16 /* RelWithDebInfo */ = {
                     isa = PBXBuildStyle;
                     buildSettings = {
                            COPY_PHASE_STRIP = NO;
                     };
                     name = RelWithDebInfo;
              };
/* End PBXBuildStyle section */

/* Begin PBXContainerItemProxy section */
              A69FBB1F848D47C4A2AFC77E /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = 8ECCD0ECAF2E483281DC4AB3;
                     remoteInfo = GLFW_303;
              };
              0CF149A76E59457FB5603BA1 /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = 4281FC2F14144312AB172F78;
                     remoteInfo = Simple;
              };
              983192D2F57245DA98492ED2 /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = 99F8AA4910AD49759402FFFD;
                     remoteInfo = Wave;
              };
              0DE57A12153E4434B62DA71D /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = D026F59EA005439AA5759970;
                     remoteInfo = Boing;
              };
              3DF14BEAD82F4E3F8EA348B9 /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = 488C77E650CF4E6989D45172;
                     remoteInfo = "Split View";
              };
              4440CFEA2CC144DAA5B770A6 /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = 17CEE7F6E60843249859CBFC;
                     remoteInfo = clipboard;
              };
              D928A1E0025741F78EB2FB87 /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = 6C4231DD046C416BB3D83DBB;
                     remoteInfo = Gears;
              };
              5CFD5BA8E2C94266BA271F25 /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = D926D1FD9988438DB1049682;
                     remoteInfo = sharing;
              };
              CDB8FCCD90A34647A6A0A318 /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = F75CCEB29D4E423BAF7E36ED;
                     remoteInfo = iconify;
              };
              6F033DF43A16472D823EFA8D /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = 09EA6F422D734B9AAAD28CFC;
                     remoteInfo = joysticks;
              };
              EF7EF59B220941E8B914C386 /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = 565FCA07EDD644728D3B8205;
                     remoteInfo = ZERO_CHECK;
              };
              3535E96EC16F4C4690B12D63 /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = 32C3EAF8A53D4436A23C5EF5;
                     remoteInfo = reopen;
              };
              44815CBFA8664A5A90888B7E /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = EE0F9327E72D4550B5978F70;
                     remoteInfo = accuracy;
              };
              F2DCD26FC8944ACC9E15BB89 /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = CC1D47C6E963444B85EE735B;
                     remoteInfo = defaults;
              };
              8D937258AC504F05972F0D97 /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = 4BC01880C619409DA9FB8FD2;
                     remoteInfo = peter;
              };
              AE09BE7564FE4161B48BFF42 /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = 4C5D17D0927A4FDBAD18089F;
                     remoteInfo = events;
              };
              D1BF39BE7A2D4B709C45DD50 /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = B851538CB21344A2A49E58BF;
                     remoteInfo = glfwinfo;
              };
              712B7C70FDD1492F8794D000 /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = 581747EBED464D69A8DFA106;
                     remoteInfo = fsaa;
              };
              206CBBE87E9F44DEAFE4E015 /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = 5CAE3657D85D467484145D50;
                     remoteInfo = modes;
              };
              D59360F7FD3C4D24BA981A86 /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = 193C5DEA84504A5389435C9B;
                     remoteInfo = gamma;
              };
              F2E9369C7C27449DBE178FE1 /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = 39DC181A1F5644AE978CB211;
                     remoteInfo = windows;
              };
              D18880BEC4A94C7D9FD82D9E /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = 3CAB4EA747C148FEAC0FEA9A;
                     remoteInfo = title;
              };
              97CFE60592EF4B6B92517DEA /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = 2C0EA26F4FF247288B50BEEC;
                     remoteInfo = tearing;
              };
              228D5F0391A84CFDBEA0421C /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = 78554724D0B74EC78F6E328A;
                     remoteInfo = threads;
              };
              34DE542EFE6642F3A1BEB03F /* PBXContainerItemProxy */ = {
                     isa = PBXContainerItemProxy;
                     containerPortal = 01F578298CE24865A1E68741 /* Project object */;
                     proxyType = 1;
                     remoteGlobalIDString = 7EBC3749A114474EA14E9D7A;
                     remoteInfo = ALL_BUILD;
              };
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
C3F59CDFAFB94FAAAA3ED247 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
2F34BDDC79204E79A380FB60 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
D458B0E680174182B30A16CE /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/src/config.h */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.h"; fileEncoding = 4; name = "config.h"; path = "../../builds6/external/glfw-3.0.3/src/config.h"; sourceTree = SOURCE_ROOT; };
C68516E065AE45C98714BCB1 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include/GLFW/glfw3.h */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.h"; fileEncoding = 4; name = "glfw3.h"; path = "include/GLFW/glfw3.h"; sourceTree = SOURCE_ROOT; };
4307BBE2928A498A8960B847 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include/GLFW/glfw3native.h */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.h"; fileEncoding = 4; name = "glfw3native.h"; path = "include/GLFW/glfw3native.h"; sourceTree = SOURCE_ROOT; };
F53F64E66A73460F853F448F /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "src/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
D6D0FBFB3EC44FC38A31C7CE /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/clipboard.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "clipboard.c"; path = "src/clipboard.c"; sourceTree = SOURCE_ROOT; };
8E3CAEB1C3FB49B78159A949 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_clipboard.m */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.objc"; fileEncoding = 4; name = "cocoa_clipboard.m"; path = "src/cocoa_clipboard.m"; sourceTree = SOURCE_ROOT; };
8D729234D8BE460DA5B90C4A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_gamma.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "cocoa_gamma.c"; path = "src/cocoa_gamma.c"; sourceTree = SOURCE_ROOT; };
3A2A546E5C8541BDAF391F67 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_init.m */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.objc"; fileEncoding = 4; name = "cocoa_init.m"; path = "src/cocoa_init.m"; sourceTree = SOURCE_ROOT; };
FDAEDA7C80D44A89849189EF /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_joystick.m */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.objc"; fileEncoding = 4; name = "cocoa_joystick.m"; path = "src/cocoa_joystick.m"; sourceTree = SOURCE_ROOT; };
88B270453D7A4757AFEEE458 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_monitor.m */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.objc"; fileEncoding = 4; name = "cocoa_monitor.m"; path = "src/cocoa_monitor.m"; sourceTree = SOURCE_ROOT; };
56BD4A3976634DFE8D1D1E7C /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_platform.h */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.h"; fileEncoding = 4; name = "cocoa_platform.h"; path = "src/cocoa_platform.h"; sourceTree = SOURCE_ROOT; };
288640748B8C481E9E48E3BB /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_time.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "cocoa_time.c"; path = "src/cocoa_time.c"; sourceTree = SOURCE_ROOT; };
4E3E02C5731E4A958AD2CC85 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_window.m */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.objc"; fileEncoding = 4; name = "cocoa_window.m"; path = "src/cocoa_window.m"; sourceTree = SOURCE_ROOT; };
ACD2247E6BEC472DAFC4342B /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/context.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "context.c"; path = "src/context.c"; sourceTree = SOURCE_ROOT; };
8F22CF4C01CF43C5B4FD5CC1 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/gamma.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "gamma.c"; path = "src/gamma.c"; sourceTree = SOURCE_ROOT; };
658E0C76726943FA92495B47 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/init.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "init.c"; path = "src/init.c"; sourceTree = SOURCE_ROOT; };
C12FB198388240758263BF47 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/input.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "input.c"; path = "src/input.c"; sourceTree = SOURCE_ROOT; };
A77C59BB3C2240DE8B058971 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/internal.h */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.h"; fileEncoding = 4; name = "internal.h"; path = "src/internal.h"; sourceTree = SOURCE_ROOT; };
89F09F3D9E324D3C9205A01D /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/joystick.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "joystick.c"; path = "src/joystick.c"; sourceTree = SOURCE_ROOT; };
FAA5C0A1A0914F9DBB3A0501 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/monitor.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "monitor.c"; path = "src/monitor.c"; sourceTree = SOURCE_ROOT; };
5842864AA3634D7198B4780B /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/nsgl_context.m */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.objc"; fileEncoding = 4; name = "nsgl_context.m"; path = "src/nsgl_context.m"; sourceTree = SOURCE_ROOT; };
F1CB2D9BB8884DB8AF396176 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/nsgl_platform.h */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.h"; fileEncoding = 4; name = "nsgl_platform.h"; path = "src/nsgl_platform.h"; sourceTree = SOURCE_ROOT; };
8B174164A2A64EC181A1A215 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/time.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "time.c"; path = "src/time.c"; sourceTree = SOURCE_ROOT; };
ED81ECC0FAD2456084CC5504 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/window.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "window.c"; path = "src/window.c"; sourceTree = SOURCE_ROOT; };
829F29E15A9647629F2D3DA9 /* GLFW_303 */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.dylib"; path = "libglfw.dylib"; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
19AC01079A3743D595182F00 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Boing.dir/Info.plist */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text.plist"; fileEncoding = 4; name = "Info.plist"; path = "../../builds6/external/glfw-3.0.3/examples/CMakeFiles/Boing.dir/Info.plist"; sourceTree = SOURCE_ROOT; };
B1A7A9A180CC4D35959053AF /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "examples/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
609F389F3DC544E58778CD5A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/boing.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "boing.c"; path = "examples/boing.c"; sourceTree = SOURCE_ROOT; };
AE4D5736C48A4CBCAD971EA3 /* Boing */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Boing; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
581A1E945DB4493DAF375C50 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Gears.dir/Info.plist */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text.plist"; fileEncoding = 4; name = "Info.plist"; path = "../../builds6/external/glfw-3.0.3/examples/CMakeFiles/Gears.dir/Info.plist"; sourceTree = SOURCE_ROOT; };
63B68E93512C45328C13A4DB /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "examples/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
9F6538F3DA644FF0AFF73649 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/gears.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "gears.c"; path = "examples/gears.c"; sourceTree = SOURCE_ROOT; };
802E5C15FBFA4BBAA95FD4C0 /* Gears */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Gears; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
12ABFE9B76A74ECA97E3BF46 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Simple.dir/Info.plist */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text.plist"; fileEncoding = 4; name = "Info.plist"; path = "../../builds6/external/glfw-3.0.3/examples/CMakeFiles/Simple.dir/Info.plist"; sourceTree = SOURCE_ROOT; };
F0C46D6FDF5C4887AD26272D /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "examples/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
49A1DE549F2745CD92A498A0 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/simple.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "simple.c"; path = "examples/simple.c"; sourceTree = SOURCE_ROOT; };
9CAE95C8E20648D38BC05CCA /* Simple */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Simple; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
2191ACE1C1844344A1A1DAD9 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Split View.dir/Info.plist */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text.plist"; fileEncoding = 4; name = "Info.plist"; path = "../../builds6/external/glfw-3.0.3/examples/CMakeFiles/Split View.dir/Info.plist"; sourceTree = SOURCE_ROOT; };
D847059C783041AD9E8841C2 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "examples/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
BEFEA5B212A24DA7B63F7387 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/splitview.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "splitview.c"; path = "examples/splitview.c"; sourceTree = SOURCE_ROOT; };
900C2C12683E4ACCA6BA021A /* Split View */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = "Split View"; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
B6BE1A050E4846A7B01EF009 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Wave.dir/Info.plist */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text.plist"; fileEncoding = 4; name = "Info.plist"; path = "../../builds6/external/glfw-3.0.3/examples/CMakeFiles/Wave.dir/Info.plist"; sourceTree = SOURCE_ROOT; };
A42F75D96B3945EF8CB5409D /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "examples/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
D4C8D87C80784E33ACC1DA59 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/wave.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "wave.c"; path = "examples/wave.c"; sourceTree = SOURCE_ROOT; };
9F3C7C7B58C242C09C66D2EE /* Wave */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = Wave; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
49441CBAF3C64A6E86228017 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/accuracy.dir/Info.plist */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text.plist"; fileEncoding = 4; name = "Info.plist"; path = "../../builds6/external/glfw-3.0.3/tests/CMakeFiles/accuracy.dir/Info.plist"; sourceTree = SOURCE_ROOT; };
A87E402EC1974E6BA488B2E0 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "tests/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
008DA4C213CE410CA39BB411 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/accuracy.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "accuracy.c"; path = "tests/accuracy.c"; sourceTree = SOURCE_ROOT; };
E2E1E1793244423D97AB8BC2 /* accuracy */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = accuracy; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
224445E02D374C51BBA632DE /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "getopt.c"; path = "deps/getopt.c"; sourceTree = SOURCE_ROOT; };
BF5A5C4C028C4A118C9D22A7 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.h"; fileEncoding = 4; name = "getopt.h"; path = "deps/getopt.h"; sourceTree = SOURCE_ROOT; };
A3D00A83672D43A79827484C /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "tests/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
7A56D0A2750141F6BA4271D7 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/clipboard.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "clipboard.c"; path = "tests/clipboard.c"; sourceTree = SOURCE_ROOT; };
E47566F1DA9B4960829D010C /* clipboard */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = clipboard; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
1FB06523D8794C0EAB59FF04 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "tests/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
5A7C940FD87344A4AE7ECF99 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/defaults.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "defaults.c"; path = "tests/defaults.c"; sourceTree = SOURCE_ROOT; };
C6E2525E5ABB41268B514251 /* defaults */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = defaults; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
B9D36EEDDFA4442DBC2932D9 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "tests/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
3EB6C57739E542E1971E52D5 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/events.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "events.c"; path = "tests/events.c"; sourceTree = SOURCE_ROOT; };
31F53CEA7D9347E8A04A41C0 /* events */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = events; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
2738F93EF89F4D9E85AE128A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "getopt.c"; path = "deps/getopt.c"; sourceTree = SOURCE_ROOT; };
5A901410AB8044DD801278FB /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.h"; fileEncoding = 4; name = "getopt.h"; path = "deps/getopt.h"; sourceTree = SOURCE_ROOT; };
652BA6DF51FE4C3C9D81C041 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "tests/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
6C84ADE166A34BA5959D4386 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/fsaa.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "fsaa.c"; path = "tests/fsaa.c"; sourceTree = SOURCE_ROOT; };
92A1863AF32A46238ACACB98 /* fsaa */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = fsaa; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
45635B98A510466D890A4B24 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "getopt.c"; path = "deps/getopt.c"; sourceTree = SOURCE_ROOT; };
F5346B79551847259A215AE7 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.h"; fileEncoding = 4; name = "getopt.h"; path = "deps/getopt.h"; sourceTree = SOURCE_ROOT; };
5FAEB4A8D5424BD4B4EACCE3 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "tests/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
FDEF2B8419BF4600AC8F2F9D /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/gamma.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "gamma.c"; path = "tests/gamma.c"; sourceTree = SOURCE_ROOT; };
3D1E42FE1FAB4CBD873E84AA /* gamma */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = gamma; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
DCF985D4E54241978C84882F /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "getopt.c"; path = "deps/getopt.c"; sourceTree = SOURCE_ROOT; };
1EE96422EECF4AB99B2B018D /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.h"; fileEncoding = 4; name = "getopt.h"; path = "deps/getopt.h"; sourceTree = SOURCE_ROOT; };
A15DBCEC57334201875E1879 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "tests/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
E7B447F448DA4FB88BA66BE7 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/glfwinfo.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "glfwinfo.c"; path = "tests/glfwinfo.c"; sourceTree = SOURCE_ROOT; };
8370A0E712DD441F952C4E66 /* glfwinfo */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = glfwinfo; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
C78F93CBF353476AADADB7ED /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "getopt.c"; path = "deps/getopt.c"; sourceTree = SOURCE_ROOT; };
914E465AF23F4D8B9A4B6E79 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.h"; fileEncoding = 4; name = "getopt.h"; path = "deps/getopt.h"; sourceTree = SOURCE_ROOT; };
F44A70916C4D409582875B32 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "tests/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
2C67DF2971D44ACE8E9D8499 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/iconify.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "iconify.c"; path = "tests/iconify.c"; sourceTree = SOURCE_ROOT; };
B7224053C001432499A5A63E /* iconify */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = iconify; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
91E0E916A79C4121A8136D71 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "tests/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
9F38A75A12994C9EA265FC80 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/joysticks.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "joysticks.c"; path = "tests/joysticks.c"; sourceTree = SOURCE_ROOT; };
188C56518171415F85FBB9FE /* joysticks */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = joysticks; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
6005FF0775EB4BF8A433DC03 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "getopt.c"; path = "deps/getopt.c"; sourceTree = SOURCE_ROOT; };
4E575987909147F4A4E75901 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.h"; fileEncoding = 4; name = "getopt.h"; path = "deps/getopt.h"; sourceTree = SOURCE_ROOT; };
875149D6852E4AA5B52CC72A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "tests/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
63E3BDF64B3B412E99D37771 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/modes.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "modes.c"; path = "tests/modes.c"; sourceTree = SOURCE_ROOT; };
C815BB5136804978BB6901AC /* modes */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = modes; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
C79DCDFB2D29404C836760CD /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "tests/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
CC1B0E720C1948F2892078A2 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/peter.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "peter.c"; path = "tests/peter.c"; sourceTree = SOURCE_ROOT; };
2B1CA3B8C18C427F85A2BBF5 /* peter */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = peter; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
7BFC8BAA49BD4041B32E0325 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "tests/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
9975646A15894F03A48246C7 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/reopen.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "reopen.c"; path = "tests/reopen.c"; sourceTree = SOURCE_ROOT; };
D9EBA30536524C9EAFFC2B4E /* reopen */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = reopen; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
4063F53D4625467EA60BC12F /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/sharing.dir/Info.plist */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text.plist"; fileEncoding = 4; name = "Info.plist"; path = "../../builds6/external/glfw-3.0.3/tests/CMakeFiles/sharing.dir/Info.plist"; sourceTree = SOURCE_ROOT; };
E23806F582B64DED884666FB /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "tests/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
5CA1D04A9A5142728E91B6B5 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/sharing.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "sharing.c"; path = "tests/sharing.c"; sourceTree = SOURCE_ROOT; };
E2087AAC7B944018B79D8B03 /* sharing */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = sharing; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
F88D628EF0094B369A12BA5A /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/tearing.dir/Info.plist */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text.plist"; fileEncoding = 4; name = "Info.plist"; path = "../../builds6/external/glfw-3.0.3/tests/CMakeFiles/tearing.dir/Info.plist"; sourceTree = SOURCE_ROOT; };
374B444F63A1494989C28EC2 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "tests/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
CEAC89F73E214272AB3BA33F /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/tearing.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "tearing.c"; path = "tests/tearing.c"; sourceTree = SOURCE_ROOT; };
BED1B8CDC349493AB89B540F /* tearing */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = tearing; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
DED0E57CC45C40838BF346DC /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/threads.dir/Info.plist */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text.plist"; fileEncoding = 4; name = "Info.plist"; path = "../../builds6/external/glfw-3.0.3/tests/CMakeFiles/threads.dir/Info.plist"; sourceTree = SOURCE_ROOT; };
0D910BB07E274253A5754EB1 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/tinycthread.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "tinycthread.c"; path = "deps/tinycthread.c"; sourceTree = SOURCE_ROOT; };
DE826CB54C5040ED96E72E9A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/tinycthread.h */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.h"; fileEncoding = 4; name = "tinycthread.h"; path = "deps/tinycthread.h"; sourceTree = SOURCE_ROOT; };
E71FD2C7A1E146ACB8C9A3D7 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "tests/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
CB64365B666C4AF5A15E983D /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/threads.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "threads.c"; path = "tests/threads.c"; sourceTree = SOURCE_ROOT; };
1D6F8A050E71491E9886ADAA /* threads */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = threads; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
4390D1031DB648C3A6B456D4 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/title.dir/Info.plist */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text.plist"; fileEncoding = 4; name = "Info.plist"; path = "../../builds6/external/glfw-3.0.3/tests/CMakeFiles/title.dir/Info.plist"; sourceTree = SOURCE_ROOT; };
85C7169E66944B238887367A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "tests/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
D230095221D2438BA60C9F1A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/title.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "title.c"; path = "tests/title.c"; sourceTree = SOURCE_ROOT; };
D05DB935E14245F1BCE48011 /* title */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = title; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
4608AF5F489B4F709DDD7D6A /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/windows.dir/Info.plist */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text.plist"; fileEncoding = 4; name = "Info.plist"; path = "../../builds6/external/glfw-3.0.3/tests/CMakeFiles/windows.dir/Info.plist"; sourceTree = SOURCE_ROOT; };
1801A86A665646BA865FCA59 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */ = {isa = PBXFileReference; explicitFileType = "sourcecode.text"; fileEncoding = 4; name = "CMakeLists.txt"; path = "tests/CMakeLists.txt"; sourceTree = SOURCE_ROOT; };
F5C6A45BF0E242E18694D0C8 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/windows.c */ = {isa = PBXFileReference; explicitFileType = "sourcecode.c.c"; fileEncoding = 4; name = "windows.c"; path = "tests/windows.c"; sourceTree = SOURCE_ROOT; };
07C2DFCC292D412697FF6209 /* windows */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; path = windows; refType = 0; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXGroup section */
              E88F0C45108741B2BCCDCA49  = {
                     isa = PBXGroup;
                     children = (
                            843BFD454A31476C8A911AA1 /* Sources */,
                            A3161F2FDFBD4F7692CBD525 /* Resources */,
                            F300A08CA5A34A06BF0A4E66 /* Products */,
                     );
                     sourceTree = "<group>";
              };
              843BFD454A31476C8A911AA1 /* Sources */ = {
                     isa = PBXGroup;
                     children = (
                            9B29D0A9739A473F9F455759 /* ALL_BUILD */,
                            2746B0DD2C1944B2B486D174 /* ZERO_CHECK */,
                            9CCA3493D84940CDA9466561 /* GLFW_303 */,
                            F9A25DA1A9684996899CB707 /* Simple */,
                            77EE806EFE594E5891FD71CD /* Gears */,
                            F8714338C9B746CAB7EE2573 /* Wave */,
                            ED3556ED9475481FBBF12CBE /* Split View */,
                            2C45BC4C0E8C45A492EADFB5 /* Boing */,
                            D317D08B9EAD4E459BF35309 /* title */,
                            15E814736E63481FAB3E240B /* joysticks */,
                            25324534D37F4A969011B17C /* modes */,
                            0F68E4518F9741C58B332329 /* sharing */,
                            564AABD3DFB44B23BF57454C /* defaults */,
                            C495F5BE2F774212BCC658E6 /* iconify */,
                            59035D340498476C8D2268B8 /* windows */,
                            A6AF50ED619E4B0DB4B86C9B /* accuracy */,
                            B02651A362474101AF1C9108 /* peter */,
                            47EC1B98797B4E64B79C9D2E /* clipboard */,
                            9D4CB01B31CC4A05BBFA8081 /* threads */,
                            C6931BA9E81848C6820AFA0C /* tearing */,
                            0037406CF0F541DB8E3E768C /* reopen */,
                            6F80119985744EB4A47DB06A /* glfwinfo */,
                            9FA3BCAC93704B64A3C31970 /* events */,
                            99C67774D6AB4F2BADDFC978 /* gamma */,
                            642C0478A7444F6CB24285CB /* fsaa */,
                     );
                     name = Sources;
                     sourceTree = "<group>";
              };
              A3161F2FDFBD4F7692CBD525 /* Resources */ = {
                     isa = PBXGroup;
                     children = (
                     );
                     name = Resources;
                     sourceTree = "<group>";
              };
              9B29D0A9739A473F9F455759 /* ALL_BUILD */ = {
                     isa = PBXGroup;
                     children = (
                            770676E9A0214BD49771B4CF /* CMake Rules */,
                            C3F59CDFAFB94FAAAA3ED247 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/CMakeLists.txt */,
                     );
                     name = ALL_BUILD;
                     sourceTree = "<group>";
              };
              770676E9A0214BD49771B4CF /* CMake Rules */ = {
                     isa = PBXGroup;
                     children = (
                     );
                     name = "CMake Rules";
                     sourceTree = "<group>";
              };
              2746B0DD2C1944B2B486D174 /* ZERO_CHECK */ = {
                     isa = PBXGroup;
                     children = (
                            CB882817DC4648A49DB6D150 /* CMake Rules */,
                            2F34BDDC79204E79A380FB60 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/CMakeLists.txt */,
                     );
                     name = ZERO_CHECK;
                     sourceTree = "<group>";
              };
              CB882817DC4648A49DB6D150 /* CMake Rules */ = {
                     isa = PBXGroup;
                     children = (
                     );
                     name = "CMake Rules";
                     sourceTree = "<group>";
              };
              9CCA3493D84940CDA9466561 /* GLFW_303 */ = {
                     isa = PBXGroup;
                     children = (
                            032AED4EE89549ADB40C8448 /* Source Files */,
                            A064339AD8C648AFA684F623 /* Header Files */,
                            F53F64E66A73460F853F448F /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/CMakeLists.txt */,
                     );
                     name = GLFW_303;
                     sourceTree = "<group>";
              };
              032AED4EE89549ADB40C8448 /* Source Files */ = {
                     isa = PBXGroup;
                     children = (
                            D6D0FBFB3EC44FC38A31C7CE /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/clipboard.c */,
                            8E3CAEB1C3FB49B78159A949 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_clipboard.m */,
                            8D729234D8BE460DA5B90C4A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_gamma.c */,
                            3A2A546E5C8541BDAF391F67 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_init.m */,
                            FDAEDA7C80D44A89849189EF /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_joystick.m */,
                            88B270453D7A4757AFEEE458 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_monitor.m */,
                            288640748B8C481E9E48E3BB /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_time.c */,
                            4E3E02C5731E4A958AD2CC85 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_window.m */,
                            ACD2247E6BEC472DAFC4342B /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/context.c */,
                            8F22CF4C01CF43C5B4FD5CC1 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/gamma.c */,
                            658E0C76726943FA92495B47 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/init.c */,
                            C12FB198388240758263BF47 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/input.c */,
                            89F09F3D9E324D3C9205A01D /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/joystick.c */,
                            FAA5C0A1A0914F9DBB3A0501 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/monitor.c */,
                            5842864AA3634D7198B4780B /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/nsgl_context.m */,
                            8B174164A2A64EC181A1A215 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/time.c */,
                            ED81ECC0FAD2456084CC5504 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/window.c */,
                     );
                     name = "Source Files";
                     sourceTree = "<group>";
              };
              A064339AD8C648AFA684F623 /* Header Files */ = {
                     isa = PBXGroup;
                     children = (
                            D458B0E680174182B30A16CE /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/src/config.h */,
                            C68516E065AE45C98714BCB1 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include/GLFW/glfw3.h */,
                            4307BBE2928A498A8960B847 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include/GLFW/glfw3native.h */,
                            56BD4A3976634DFE8D1D1E7C /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_platform.h */,
                            A77C59BB3C2240DE8B058971 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/internal.h */,
                            F1CB2D9BB8884DB8AF396176 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/nsgl_platform.h */,
                     );
                     name = "Header Files";
                     sourceTree = "<group>";
              };
              F9A25DA1A9684996899CB707 /* Simple */ = {
                     isa = PBXGroup;
                     children = (
                            93FE800D83B64FB79603A5C5 /* Source Files */,
                            B566DF58A3E24A90A179C2C0 /* Resources */,
                            F0C46D6FDF5C4887AD26272D /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/CMakeLists.txt */,
                     );
                     name = Simple;
                     sourceTree = "<group>";
              };
              93FE800D83B64FB79603A5C5 /* Source Files */ = {
                     isa = PBXGroup;
                     children = (
                            49A1DE549F2745CD92A498A0 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/simple.c */,
                     );
                     name = "Source Files";
                     sourceTree = "<group>";
              };
              B566DF58A3E24A90A179C2C0 /* Resources */ = {
                     isa = PBXGroup;
                     children = (
                            12ABFE9B76A74ECA97E3BF46 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Simple.dir/Info.plist */,
                     );
                     name = Resources;
                     sourceTree = "<group>";
              };
              77EE806EFE594E5891FD71CD /* Gears */ = {
                     isa = PBXGroup;
                     children = (
                            B1130E89DF554D82A2CEE3C2 /* Source Files */,
                            8C8666F479EB42B892E9388A /* Resources */,
                            63B68E93512C45328C13A4DB /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/CMakeLists.txt */,
                     );
                     name = Gears;
                     sourceTree = "<group>";
              };
              B1130E89DF554D82A2CEE3C2 /* Source Files */ = {
                     isa = PBXGroup;
                     children = (
                            9F6538F3DA644FF0AFF73649 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/gears.c */,
                     );
                     name = "Source Files";
                     sourceTree = "<group>";
              };
              8C8666F479EB42B892E9388A /* Resources */ = {
                     isa = PBXGroup;
                     children = (
                            581A1E945DB4493DAF375C50 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Gears.dir/Info.plist */,
                     );
                     name = Resources;
                     sourceTree = "<group>";
              };
              F8714338C9B746CAB7EE2573 /* Wave */ = {
                     isa = PBXGroup;
                     children = (
                            E8687DA5C5404E549895C6E0 /* Source Files */,
                            47C36262BB524D30BB5867A1 /* Resources */,
                            A42F75D96B3945EF8CB5409D /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/CMakeLists.txt */,
                     );
                     name = Wave;
                     sourceTree = "<group>";
              };
              E8687DA5C5404E549895C6E0 /* Source Files */ = {
                     isa = PBXGroup;
                     children = (
                            D4C8D87C80784E33ACC1DA59 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/wave.c */,
                     );
                     name = "Source Files";
                     sourceTree = "<group>";
              };
              47C36262BB524D30BB5867A1 /* Resources */ = {
                     isa = PBXGroup;
                     children = (
                            B6BE1A050E4846A7B01EF009 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Wave.dir/Info.plist */,
                     );
                     name = Resources;
                     sourceTree = "<group>";
              };
              ED3556ED9475481FBBF12CBE /* Split View */ = {
                     isa = PBXGroup;
                     children = (
                            7C08D1DE22544B8086201C0E /* Source Files */,
                            71D78DB803B8421F98877795 /* Resources */,
                            D847059C783041AD9E8841C2 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/CMakeLists.txt */,
                     );
                     name = "Split View";
                     sourceTree = "<group>";
              };
              7C08D1DE22544B8086201C0E /* Source Files */ = {
                     isa = PBXGroup;
                     children = (
                            BEFEA5B212A24DA7B63F7387 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/splitview.c */,
                     );
                     name = "Source Files";
                     sourceTree = "<group>";
              };
              71D78DB803B8421F98877795 /* Resources */ = {
                     isa = PBXGroup;
                     children = (
                            2191ACE1C1844344A1A1DAD9 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Split View.dir/Info.plist */,
                     );
                     name = Resources;
                     sourceTree = "<group>";
              };
              2C45BC4C0E8C45A492EADFB5 /* Boing */ = {
                     isa = PBXGroup;
                     children = (
                            34D1801363684A308996A27D /* Source Files */,
                            733899FD6FE14C8199A2B317 /* Resources */,
                            B1A7A9A180CC4D35959053AF /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/CMakeLists.txt */,
                     );
                     name = Boing;
                     sourceTree = "<group>";
              };
              34D1801363684A308996A27D /* Source Files */ = {
                     isa = PBXGroup;
                     children = (
                            609F389F3DC544E58778CD5A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/boing.c */,
                     );
                     name = "Source Files";
                     sourceTree = "<group>";
              };
              733899FD6FE14C8199A2B317 /* Resources */ = {
                     isa = PBXGroup;
                     children = (
                            19AC01079A3743D595182F00 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Boing.dir/Info.plist */,
                     );
                     name = Resources;
                     sourceTree = "<group>";
              };
              D317D08B9EAD4E459BF35309 /* title */ = {
                     isa = PBXGroup;
                     children = (
                            3B45B0DCBCA546F3B3B362D1 /* Source Files */,
                            FEFEB30DA62F47BA8B0772B7 /* Resources */,
                            85C7169E66944B238887367A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */,
                     );
                     name = title;
                     sourceTree = "<group>";
              };
              3B45B0DCBCA546F3B3B362D1 /* Source Files */ = {
                     isa = PBXGroup;
                     children = (
                            D230095221D2438BA60C9F1A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/title.c */,
                     );
                     name = "Source Files";
                     sourceTree = "<group>";
              };
              FEFEB30DA62F47BA8B0772B7 /* Resources */ = {
                     isa = PBXGroup;
                     children = (
                            4390D1031DB648C3A6B456D4 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/title.dir/Info.plist */,
                     );
                     name = Resources;
                     sourceTree = "<group>";
              };
              15E814736E63481FAB3E240B /* joysticks */ = {
                     isa = PBXGroup;
                     children = (
                            CB3B6A408F2E4E028CD1A019 /* Source Files */,
                            91E0E916A79C4121A8136D71 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */,
                     );
                     name = joysticks;
                     sourceTree = "<group>";
              };
              CB3B6A408F2E4E028CD1A019 /* Source Files */ = {
                     isa = PBXGroup;
                     children = (
                            9F38A75A12994C9EA265FC80 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/joysticks.c */,
                     );
                     name = "Source Files";
                     sourceTree = "<group>";
              };
              25324534D37F4A969011B17C /* modes */ = {
                     isa = PBXGroup;
                     children = (
                            E4100F77053C46CDB054A7EA /* Source Files */,
                            49062B0A0428418CA8BDF5F6 /* Header Files */,
                            875149D6852E4AA5B52CC72A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */,
                     );
                     name = modes;
                     sourceTree = "<group>";
              };
              E4100F77053C46CDB054A7EA /* Source Files */ = {
                     isa = PBXGroup;
                     children = (
                            6005FF0775EB4BF8A433DC03 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */,
                            63E3BDF64B3B412E99D37771 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/modes.c */,
                     );
                     name = "Source Files";
                     sourceTree = "<group>";
              };
              49062B0A0428418CA8BDF5F6 /* Header Files */ = {
                     isa = PBXGroup;
                     children = (
                            4E575987909147F4A4E75901 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */,
                     );
                     name = "Header Files";
                     sourceTree = "<group>";
              };
              0F68E4518F9741C58B332329 /* sharing */ = {
                     isa = PBXGroup;
                     children = (
                            5A69C558FEA14DA6B41964BD /* Source Files */,
                            0267F9857E16435BA3ED52BC /* Resources */,
                            E23806F582B64DED884666FB /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */,
                     );
                     name = sharing;
                     sourceTree = "<group>";
              };
              5A69C558FEA14DA6B41964BD /* Source Files */ = {
                     isa = PBXGroup;
                     children = (
                            5CA1D04A9A5142728E91B6B5 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/sharing.c */,
                     );
                     name = "Source Files";
                     sourceTree = "<group>";
              };
              0267F9857E16435BA3ED52BC /* Resources */ = {
                     isa = PBXGroup;
                     children = (
                            4063F53D4625467EA60BC12F /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/sharing.dir/Info.plist */,
                     );
                     name = Resources;
                     sourceTree = "<group>";
              };
              564AABD3DFB44B23BF57454C /* defaults */ = {
                     isa = PBXGroup;
                     children = (
                            AEFCB0CCEB8D4C8A9EA8F18E /* Source Files */,
                            1FB06523D8794C0EAB59FF04 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */,
                     );
                     name = defaults;
                     sourceTree = "<group>";
              };
              AEFCB0CCEB8D4C8A9EA8F18E /* Source Files */ = {
                     isa = PBXGroup;
                     children = (
                            5A7C940FD87344A4AE7ECF99 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/defaults.c */,
                     );
                     name = "Source Files";
                     sourceTree = "<group>";
              };
              C495F5BE2F774212BCC658E6 /* iconify */ = {
                     isa = PBXGroup;
                     children = (
                            54A665CA57094BEDA47D0151 /* Source Files */,
                            3D96AA6806D24C2E92F745C6 /* Header Files */,
                            F44A70916C4D409582875B32 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */,
                     );
                     name = iconify;
                     sourceTree = "<group>";
              };
              54A665CA57094BEDA47D0151 /* Source Files */ = {
                     isa = PBXGroup;
                     children = (
                            C78F93CBF353476AADADB7ED /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */,
                            2C67DF2971D44ACE8E9D8499 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/iconify.c */,
                     );
                     name = "Source Files";
                     sourceTree = "<group>";
              };
              3D96AA6806D24C2E92F745C6 /* Header Files */ = {
                     isa = PBXGroup;
                     children = (
                            914E465AF23F4D8B9A4B6E79 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */,
                     );
                     name = "Header Files";
                     sourceTree = "<group>";
              };
              59035D340498476C8D2268B8 /* windows */ = {
                     isa = PBXGroup;
                     children = (
                            40C86CD2698A4DE6954E13AE /* Source Files */,
                            ED63995E9D4D4120BDA43B82 /* Resources */,
                            1801A86A665646BA865FCA59 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */,
                     );
                     name = windows;
                     sourceTree = "<group>";
              };
              40C86CD2698A4DE6954E13AE /* Source Files */ = {
                     isa = PBXGroup;
                     children = (
                            F5C6A45BF0E242E18694D0C8 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/windows.c */,
                     );
                     name = "Source Files";
                     sourceTree = "<group>";
              };
              ED63995E9D4D4120BDA43B82 /* Resources */ = {
                     isa = PBXGroup;
                     children = (
                            4608AF5F489B4F709DDD7D6A /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/windows.dir/Info.plist */,
                     );
                     name = Resources;
                     sourceTree = "<group>";
              };
              A6AF50ED619E4B0DB4B86C9B /* accuracy */ = {
                     isa = PBXGroup;
                     children = (
                            C0039FA318A94EADB10A38A5 /* Source Files */,
                            0688F01BA44A4EB3844B0A19 /* Resources */,
                            A87E402EC1974E6BA488B2E0 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */,
                     );
                     name = accuracy;
                     sourceTree = "<group>";
              };
              C0039FA318A94EADB10A38A5 /* Source Files */ = {
                     isa = PBXGroup;
                     children = (
                            008DA4C213CE410CA39BB411 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/accuracy.c */,
                     );
                     name = "Source Files";
                     sourceTree = "<group>";
              };
              0688F01BA44A4EB3844B0A19 /* Resources */ = {
                     isa = PBXGroup;
                     children = (
                            49441CBAF3C64A6E86228017 /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/accuracy.dir/Info.plist */,
                     );
                     name = Resources;
                     sourceTree = "<group>";
              };
              B02651A362474101AF1C9108 /* peter */ = {
                     isa = PBXGroup;
                     children = (
                            5595C6936E5F4FB0B55216C8 /* Source Files */,
                            C79DCDFB2D29404C836760CD /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */,
                     );
                     name = peter;
                     sourceTree = "<group>";
              };
              5595C6936E5F4FB0B55216C8 /* Source Files */ = {
                     isa = PBXGroup;
                     children = (
                            CC1B0E720C1948F2892078A2 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/peter.c */,
                     );
                     name = "Source Files";
                     sourceTree = "<group>";
              };
              47EC1B98797B4E64B79C9D2E /* clipboard */ = {
                     isa = PBXGroup;
                     children = (
                            5F3E308F1A8B46C1A7404FCD /* Source Files */,
                            25611BC2957A41E1B5358B92 /* Header Files */,
                            A3D00A83672D43A79827484C /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */,
                     );
                     name = clipboard;
                     sourceTree = "<group>";
              };
              5F3E308F1A8B46C1A7404FCD /* Source Files */ = {
                     isa = PBXGroup;
                     children = (
                            224445E02D374C51BBA632DE /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */,
                            7A56D0A2750141F6BA4271D7 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/clipboard.c */,
                     );
                     name = "Source Files";
                     sourceTree = "<group>";
              };
              25611BC2957A41E1B5358B92 /* Header Files */ = {
                     isa = PBXGroup;
                     children = (
                            BF5A5C4C028C4A118C9D22A7 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */,
                     );
                     name = "Header Files";
                     sourceTree = "<group>";
              };
              9D4CB01B31CC4A05BBFA8081 /* threads */ = {
                     isa = PBXGroup;
                     children = (
                            F126BC830706499FA20CB88B /* Source Files */,
                            19D2204C07504B1399436F65 /* Header Files */,
                            9EC39DEEE7CB481E9E7DFA76 /* Resources */,
                            E71FD2C7A1E146ACB8C9A3D7 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */,
                     );
                     name = threads;
                     sourceTree = "<group>";
              };
              F126BC830706499FA20CB88B /* Source Files */ = {
                     isa = PBXGroup;
                     children = (
                            0D910BB07E274253A5754EB1 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/tinycthread.c */,
                            CB64365B666C4AF5A15E983D /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/threads.c */,
                     );
                     name = "Source Files";
                     sourceTree = "<group>";
              };
              19D2204C07504B1399436F65 /* Header Files */ = {
                     isa = PBXGroup;
                     children = (
                            DE826CB54C5040ED96E72E9A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/tinycthread.h */,
                     );
                     name = "Header Files";
                     sourceTree = "<group>";
              };
              9EC39DEEE7CB481E9E7DFA76 /* Resources */ = {
                     isa = PBXGroup;
                     children = (
                            DED0E57CC45C40838BF346DC /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/threads.dir/Info.plist */,
                     );
                     name = Resources;
                     sourceTree = "<group>";
              };
              C6931BA9E81848C6820AFA0C /* tearing */ = {
                     isa = PBXGroup;
                     children = (
                            22837DDADBA245258E3615A2 /* Source Files */,
                            ADB110255DA24FE8A62F0329 /* Resources */,
                            374B444F63A1494989C28EC2 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */,
                     );
                     name = tearing;
                     sourceTree = "<group>";
              };
              22837DDADBA245258E3615A2 /* Source Files */ = {
                     isa = PBXGroup;
                     children = (
                            CEAC89F73E214272AB3BA33F /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/tearing.c */,
                     );
                     name = "Source Files";
                     sourceTree = "<group>";
              };
              ADB110255DA24FE8A62F0329 /* Resources */ = {
                     isa = PBXGroup;
                     children = (
                            F88D628EF0094B369A12BA5A /* /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/tearing.dir/Info.plist */,
                     );
                     name = Resources;
                     sourceTree = "<group>";
              };
              0037406CF0F541DB8E3E768C /* reopen */ = {
                     isa = PBXGroup;
                     children = (
                            2CBA0F9EED574A2EA41BE0EA /* Source Files */,
                            7BFC8BAA49BD4041B32E0325 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */,
                     );
                     name = reopen;
                     sourceTree = "<group>";
              };
              2CBA0F9EED574A2EA41BE0EA /* Source Files */ = {
                     isa = PBXGroup;
                     children = (
                            9975646A15894F03A48246C7 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/reopen.c */,
                     );
                     name = "Source Files";
                     sourceTree = "<group>";
              };
              6F80119985744EB4A47DB06A /* glfwinfo */ = {
                     isa = PBXGroup;
                     children = (
                            39296F0D44FA4CE890500267 /* Source Files */,
                            615E8CE07ADC4C999427C0B4 /* Header Files */,
                            A15DBCEC57334201875E1879 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */,
                     );
                     name = glfwinfo;
                     sourceTree = "<group>";
              };
              39296F0D44FA4CE890500267 /* Source Files */ = {
                     isa = PBXGroup;
                     children = (
                            DCF985D4E54241978C84882F /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */,
                            E7B447F448DA4FB88BA66BE7 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/glfwinfo.c */,
                     );
                     name = "Source Files";
                     sourceTree = "<group>";
              };
              615E8CE07ADC4C999427C0B4 /* Header Files */ = {
                     isa = PBXGroup;
                     children = (
                            1EE96422EECF4AB99B2B018D /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */,
                     );
                     name = "Header Files";
                     sourceTree = "<group>";
              };
              9FA3BCAC93704B64A3C31970 /* events */ = {
                     isa = PBXGroup;
                     children = (
                            FE9EDA0DB015418D92021283 /* Source Files */,
                            B9D36EEDDFA4442DBC2932D9 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */,
                     );
                     name = events;
                     sourceTree = "<group>";
              };
              FE9EDA0DB015418D92021283 /* Source Files */ = {
                     isa = PBXGroup;
                     children = (
                            3EB6C57739E542E1971E52D5 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/events.c */,
                     );
                     name = "Source Files";
                     sourceTree = "<group>";
              };
              99C67774D6AB4F2BADDFC978 /* gamma */ = {
                     isa = PBXGroup;
                     children = (
                            ECC6F1C8686A4731BC3D1F48 /* Source Files */,
                            9187ACF164064910A0759E34 /* Header Files */,
                            5FAEB4A8D5424BD4B4EACCE3 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */,
                     );
                     name = gamma;
                     sourceTree = "<group>";
              };
              ECC6F1C8686A4731BC3D1F48 /* Source Files */ = {
                     isa = PBXGroup;
                     children = (
                            45635B98A510466D890A4B24 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */,
                            FDEF2B8419BF4600AC8F2F9D /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/gamma.c */,
                     );
                     name = "Source Files";
                     sourceTree = "<group>";
              };
              9187ACF164064910A0759E34 /* Header Files */ = {
                     isa = PBXGroup;
                     children = (
                            F5346B79551847259A215AE7 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */,
                     );
                     name = "Header Files";
                     sourceTree = "<group>";
              };
              642C0478A7444F6CB24285CB /* fsaa */ = {
                     isa = PBXGroup;
                     children = (
                            E3A34EC20A6140CD8CDCD715 /* Source Files */,
                            E2D01092C530418DAC27F105 /* Header Files */,
                            652BA6DF51FE4C3C9D81C041 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/CMakeLists.txt */,
                     );
                     name = fsaa;
                     sourceTree = "<group>";
              };
              E3A34EC20A6140CD8CDCD715 /* Source Files */ = {
                     isa = PBXGroup;
                     children = (
                            2738F93EF89F4D9E85AE128A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */,
                            6C84ADE166A34BA5959D4386 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/fsaa.c */,
                     );
                     name = "Source Files";
                     sourceTree = "<group>";
              };
              E2D01092C530418DAC27F105 /* Header Files */ = {
                     isa = PBXGroup;
                     children = (
                            5A901410AB8044DD801278FB /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.h */,
                     );
                     name = "Header Files";
                     sourceTree = "<group>";
              };
              F300A08CA5A34A06BF0A4E66 /* Products */ = {
                     isa = PBXGroup;
                     children = (
                            829F29E15A9647629F2D3DA9 /* GLFW_303 */,
                            AE4D5736C48A4CBCAD971EA3 /* Boing */,
                            802E5C15FBFA4BBAA95FD4C0 /* Gears */,
                            9CAE95C8E20648D38BC05CCA /* Simple */,
                            900C2C12683E4ACCA6BA021A /* Split View */,
                            9F3C7C7B58C242C09C66D2EE /* Wave */,
                            E2E1E1793244423D97AB8BC2 /* accuracy */,
                            E47566F1DA9B4960829D010C /* clipboard */,
                            C6E2525E5ABB41268B514251 /* defaults */,
                            31F53CEA7D9347E8A04A41C0 /* events */,
                            92A1863AF32A46238ACACB98 /* fsaa */,
                            3D1E42FE1FAB4CBD873E84AA /* gamma */,
                            8370A0E712DD441F952C4E66 /* glfwinfo */,
                            B7224053C001432499A5A63E /* iconify */,
                            188C56518171415F85FBB9FE /* joysticks */,
                            C815BB5136804978BB6901AC /* modes */,
                            2B1CA3B8C18C427F85A2BBF5 /* peter */,
                            D9EBA30536524C9EAFFC2B4E /* reopen */,
                            E2087AAC7B944018B79D8B03 /* sharing */,
                            BED1B8CDC349493AB89B540F /* tearing */,
                            1D6F8A050E71491E9886ADAA /* threads */,
                            D05DB935E14245F1BCE48011 /* title */,
                            07C2DFCC292D412697FF6209 /* windows */,
                     );
                     name = Products;
                     sourceTree = "<group>";
              };
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
              8ECCD0ECAF2E483281DC4AB3 /* GLFW_303 */ = {
                     isa = PBXNativeTarget;
                     buildConfigurationList = E34CC8A60C894BAE99A76F91 /* Build configuration list for PBXNativeTarget "GLFW_303" */;
                     buildPhases = (
                            7D720D4CDF7B4B1DB07FE09F /* Sources */,
                            CDADE6B4EA124E0386CF6152 /* CMake PostBuild Rules */,
                     );
                     buildRules = (
                     );
                     dependencies = (
                     );
                     name = GLFW_303;
                     productName = GLFW_303;
                     productReference = 829F29E15A9647629F2D3DA9 /* GLFW_303 */;
                     productType = "com.apple.product-type.library.dynamic";
              };
              D026F59EA005439AA5759970 /* Boing */ = {
                     isa = PBXNativeTarget;
                     buildConfigurationList = C23F0FBABEF247EB829C7ACA /* Build configuration list for PBXNativeTarget "Boing" */;
                     buildPhases = (
                            88BBC6D81B7D415287C796CB /* Sources */,
                     );
                     buildRules = (
                     );
                     dependencies = (
                     );
                     name = Boing;
                     productName = Boing;
                     productReference = AE4D5736C48A4CBCAD971EA3 /* Boing */;
                     productType = "com.apple.product-type.application";
              };
              6C4231DD046C416BB3D83DBB /* Gears */ = {
                     isa = PBXNativeTarget;
                     buildConfigurationList = CF318CB9E8194E229021C976 /* Build configuration list for PBXNativeTarget "Gears" */;
                     buildPhases = (
                            C78A91DE7ADC4755849190B7 /* Sources */,
                     );
                     buildRules = (
                     );
                     dependencies = (
                     );
                     name = Gears;
                     productName = Gears;
                     productReference = 802E5C15FBFA4BBAA95FD4C0 /* Gears */;
                     productType = "com.apple.product-type.application";
              };
              4281FC2F14144312AB172F78 /* Simple */ = {
                     isa = PBXNativeTarget;
                     buildConfigurationList = CF903CDC22D9481088E47D3A /* Build configuration list for PBXNativeTarget "Simple" */;
                     buildPhases = (
                            D756FFC755B34EB89A06BE0F /* Sources */,
                     );
                     buildRules = (
                     );
                     dependencies = (
                     );
                     name = Simple;
                     productName = Simple;
                     productReference = 9CAE95C8E20648D38BC05CCA /* Simple */;
                     productType = "com.apple.product-type.application";
              };
              488C77E650CF4E6989D45172 /* Split View */ = {
                     isa = PBXNativeTarget;
                     buildConfigurationList = 0C758CD6CE9E409C8A1D01DA /* Build configuration list for PBXNativeTarget "Split View" */;
                     buildPhases = (
                            65AD0DBBDDE9406CACCBCE94 /* Sources */,
                     );
                     buildRules = (
                     );
                     dependencies = (
                     );
                     name = "Split View";
                     productName = "Split View";
                     productReference = 900C2C12683E4ACCA6BA021A /* Split View */;
                     productType = "com.apple.product-type.application";
              };
              99F8AA4910AD49759402FFFD /* Wave */ = {
                     isa = PBXNativeTarget;
                     buildConfigurationList = 474695901C9B4A0FBE48484E /* Build configuration list for PBXNativeTarget "Wave" */;
                     buildPhases = (
                            F6BB459409164F1C908939AC /* Sources */,
                     );
                     buildRules = (
                     );
                     dependencies = (
                     );
                     name = Wave;
                     productName = Wave;
                     productReference = 9F3C7C7B58C242C09C66D2EE /* Wave */;
                     productType = "com.apple.product-type.application";
              };
              EE0F9327E72D4550B5978F70 /* accuracy */ = {
                     isa = PBXNativeTarget;
                     buildConfigurationList = D5AF28A489144FB799492669 /* Build configuration list for PBXNativeTarget "accuracy" */;
                     buildPhases = (
                            B7F618A34B654079B27F67EC /* Sources */,
                     );
                     buildRules = (
                     );
                     dependencies = (
                     );
                     name = accuracy;
                     productName = accuracy;
                     productReference = E2E1E1793244423D97AB8BC2 /* accuracy */;
                     productType = "com.apple.product-type.application";
              };
              17CEE7F6E60843249859CBFC /* clipboard */ = {
                     isa = PBXNativeTarget;
                     buildConfigurationList = CC6921AEFCCA4719ACF61808 /* Build configuration list for PBXNativeTarget "clipboard" */;
                     buildPhases = (
                            1119AADD4F9245C7B941B2CD /* Sources */,
                     );
                     buildRules = (
                     );
                     dependencies = (
                     );
                     name = clipboard;
                     productName = clipboard;
                     productReference = E47566F1DA9B4960829D010C /* clipboard */;
                     productType = "com.apple.product-type.tool";
              };
              CC1D47C6E963444B85EE735B /* defaults */ = {
                     isa = PBXNativeTarget;
                     buildConfigurationList = 0250185ADFBE4C82AB416529 /* Build configuration list for PBXNativeTarget "defaults" */;
                     buildPhases = (
                            3F1BDEB0A8BA4777BF63ED6D /* Sources */,
                     );
                     buildRules = (
                     );
                     dependencies = (
                     );
                     name = defaults;
                     productName = defaults;
                     productReference = C6E2525E5ABB41268B514251 /* defaults */;
                     productType = "com.apple.product-type.tool";
              };
              4C5D17D0927A4FDBAD18089F /* events */ = {
                     isa = PBXNativeTarget;
                     buildConfigurationList = 12DA573F9915443DB1D33133 /* Build configuration list for PBXNativeTarget "events" */;
                     buildPhases = (
                            BD7D96CF10C5450FAEB02F6F /* Sources */,
                     );
                     buildRules = (
                     );
                     dependencies = (
                     );
                     name = events;
                     productName = events;
                     productReference = 31F53CEA7D9347E8A04A41C0 /* events */;
                     productType = "com.apple.product-type.tool";
              };
              581747EBED464D69A8DFA106 /* fsaa */ = {
                     isa = PBXNativeTarget;
                     buildConfigurationList = 5E865E6038DC469F971431FA /* Build configuration list for PBXNativeTarget "fsaa" */;
                     buildPhases = (
                            88C19280FB4D40BDB71DFCD3 /* Sources */,
                     );
                     buildRules = (
                     );
                     dependencies = (
                     );
                     name = fsaa;
                     productName = fsaa;
                     productReference = 92A1863AF32A46238ACACB98 /* fsaa */;
                     productType = "com.apple.product-type.tool";
              };
              193C5DEA84504A5389435C9B /* gamma */ = {
                     isa = PBXNativeTarget;
                     buildConfigurationList = B979EBC2D2E6427AB91FE912 /* Build configuration list for PBXNativeTarget "gamma" */;
                     buildPhases = (
                            0CEC3C4B78144127BD93F4F3 /* Sources */,
                     );
                     buildRules = (
                     );
                     dependencies = (
                     );
                     name = gamma;
                     productName = gamma;
                     productReference = 3D1E42FE1FAB4CBD873E84AA /* gamma */;
                     productType = "com.apple.product-type.tool";
              };
              B851538CB21344A2A49E58BF /* glfwinfo */ = {
                     isa = PBXNativeTarget;
                     buildConfigurationList = 2140F29891F44A2C96B7C7E8 /* Build configuration list for PBXNativeTarget "glfwinfo" */;
                     buildPhases = (
                            F52CC659FFAC4298B5BC5DA1 /* Sources */,
                     );
                     buildRules = (
                     );
                     dependencies = (
                     );
                     name = glfwinfo;
                     productName = glfwinfo;
                     productReference = 8370A0E712DD441F952C4E66 /* glfwinfo */;
                     productType = "com.apple.product-type.tool";
              };
              F75CCEB29D4E423BAF7E36ED /* iconify */ = {
                     isa = PBXNativeTarget;
                     buildConfigurationList = 15E8A90C97DF4574826E5AD4 /* Build configuration list for PBXNativeTarget "iconify" */;
                     buildPhases = (
                            6A07C528BD6D4257AA2390A3 /* Sources */,
                     );
                     buildRules = (
                     );
                     dependencies = (
                     );
                     name = iconify;
                     productName = iconify;
                     productReference = B7224053C001432499A5A63E /* iconify */;
                     productType = "com.apple.product-type.tool";
              };
              09EA6F422D734B9AAAD28CFC /* joysticks */ = {
                     isa = PBXNativeTarget;
                     buildConfigurationList = 45A8E0CD77ED4F3EA188F7A5 /* Build configuration list for PBXNativeTarget "joysticks" */;
                     buildPhases = (
                            85101F3AFECA4142BA73EF16 /* Sources */,
                     );
                     buildRules = (
                     );
                     dependencies = (
                     );
                     name = joysticks;
                     productName = joysticks;
                     productReference = 188C56518171415F85FBB9FE /* joysticks */;
                     productType = "com.apple.product-type.tool";
              };
              5CAE3657D85D467484145D50 /* modes */ = {
                     isa = PBXNativeTarget;
                     buildConfigurationList = D688FA3B7E7F476D99F2EF19 /* Build configuration list for PBXNativeTarget "modes" */;
                     buildPhases = (
                            4FC3F349218B4EF1A5038DCE /* Sources */,
                     );
                     buildRules = (
                     );
                     dependencies = (
                     );
                     name = modes;
                     productName = modes;
                     productReference = C815BB5136804978BB6901AC /* modes */;
                     productType = "com.apple.product-type.tool";
              };
              4BC01880C619409DA9FB8FD2 /* peter */ = {
                     isa = PBXNativeTarget;
                     buildConfigurationList = D0A7E90E21BC490A853CCD76 /* Build configuration list for PBXNativeTarget "peter" */;
                     buildPhases = (
                            029921A8A1F44CD091EF2E86 /* Sources */,
                     );
                     buildRules = (
                     );
                     dependencies = (
                     );
                     name = peter;
                     productName = peter;
                     productReference = 2B1CA3B8C18C427F85A2BBF5 /* peter */;
                     productType = "com.apple.product-type.tool";
              };
              32C3EAF8A53D4436A23C5EF5 /* reopen */ = {
                     isa = PBXNativeTarget;
                     buildConfigurationList = 9F33574A0210488DA37EDBAB /* Build configuration list for PBXNativeTarget "reopen" */;
                     buildPhases = (
                            BFECD3B20510442FB5E4885E /* Sources */,
                     );
                     buildRules = (
                     );
                     dependencies = (
                     );
                     name = reopen;
                     productName = reopen;
                     productReference = D9EBA30536524C9EAFFC2B4E /* reopen */;
                     productType = "com.apple.product-type.tool";
              };
              D926D1FD9988438DB1049682 /* sharing */ = {
                     isa = PBXNativeTarget;
                     buildConfigurationList = 6A928742C5C5470483275313 /* Build configuration list for PBXNativeTarget "sharing" */;
                     buildPhases = (
                            DD7BA4AA7D9A4273A3D72BD0 /* Sources */,
                     );
                     buildRules = (
                     );
                     dependencies = (
                     );
                     name = sharing;
                     productName = sharing;
                     productReference = E2087AAC7B944018B79D8B03 /* sharing */;
                     productType = "com.apple.product-type.application";
              };
              2C0EA26F4FF247288B50BEEC /* tearing */ = {
                     isa = PBXNativeTarget;
                     buildConfigurationList = 1AFF0C38EF9349A6989BE76C /* Build configuration list for PBXNativeTarget "tearing" */;
                     buildPhases = (
                            A84738E07B6E4DC8BC461113 /* Sources */,
                     );
                     buildRules = (
                     );
                     dependencies = (
                     );
                     name = tearing;
                     productName = tearing;
                     productReference = BED1B8CDC349493AB89B540F /* tearing */;
                     productType = "com.apple.product-type.application";
              };
              78554724D0B74EC78F6E328A /* threads */ = {
                     isa = PBXNativeTarget;
                     buildConfigurationList = 958D2C419A2D4DA5964493F5 /* Build configuration list for PBXNativeTarget "threads" */;
                     buildPhases = (
                            4BBB07F939A943D3B8B9881D /* Sources */,
                     );
                     buildRules = (
                     );
                     dependencies = (
                     );
                     name = threads;
                     productName = threads;
                     productReference = 1D6F8A050E71491E9886ADAA /* threads */;
                     productType = "com.apple.product-type.application";
              };
              3CAB4EA747C148FEAC0FEA9A /* title */ = {
                     isa = PBXNativeTarget;
                     buildConfigurationList = EA63FA88623D4A2E8B5C6128 /* Build configuration list for PBXNativeTarget "title" */;
                     buildPhases = (
                            13BFFAA84907468880C6BE39 /* Sources */,
                     );
                     buildRules = (
                     );
                     dependencies = (
                     );
                     name = title;
                     productName = title;
                     productReference = D05DB935E14245F1BCE48011 /* title */;
                     productType = "com.apple.product-type.application";
              };
              39DC181A1F5644AE978CB211 /* windows */ = {
                     isa = PBXNativeTarget;
                     buildConfigurationList = B1B172CDC6AD49C5975F88E5 /* Build configuration list for PBXNativeTarget "windows" */;
                     buildPhases = (
                            3BDBB7A1D5F8428BAC4EFDD2 /* Sources */,
                     );
                     buildRules = (
                     );
                     dependencies = (
                     );
                     name = windows;
                     productName = windows;
                     productReference = 07C2DFCC292D412697FF6209 /* windows */;
                     productType = "com.apple.product-type.application";
              };
/* End PBXNativeTarget section */

/* Begin PBXProject section */
              01F578298CE24865A1E68741 /* Project object */ = {
                     isa = PBXProject;
                     attributes = {
                            BuildIndependentTargetsInParallel = YES;
                     };
                     buildConfigurationList = 0BCF3FADEA8348BCA8B0E910 /* Build configuration list for PBXProject  "GLFW" */;
                     buildSettings = {
                     };
                     buildStyles = (
                            737EE10EBCAC4D20AE8552D4 /* Debug */,
                            74D05C265FAB4F2097877432 /* Release */,
                            D2A8BCA0DBF74CC7BE1BE667 /* MinSizeRel */,
                            1CC336D5604C41F7907AAE16 /* RelWithDebInfo */,
                     );
                     compatibilityVersion = "Xcode 3.2";
                     hasScannedForEncodings = 0;
                     mainGroup = E88F0C45108741B2BCCDCA49;
                     projectDirPath = "../../../external/glfw-3.0.3";
                     projectRoot = "";
                     targets = (
                            7EBC3749A114474EA14E9D7A /* ALL_BUILD */,
                            565FCA07EDD644728D3B8205 /* ZERO_CHECK */,
                            48883AE2A5A147D7843552E8 /* install */,
                            8ECCD0ECAF2E483281DC4AB3 /* GLFW_303 */,
                            D026F59EA005439AA5759970 /* Boing */,
                            6C4231DD046C416BB3D83DBB /* Gears */,
                            4281FC2F14144312AB172F78 /* Simple */,
                            488C77E650CF4E6989D45172 /* Split View */,
                            99F8AA4910AD49759402FFFD /* Wave */,
                            EE0F9327E72D4550B5978F70 /* accuracy */,
                            17CEE7F6E60843249859CBFC /* clipboard */,
                            CC1D47C6E963444B85EE735B /* defaults */,
                            4C5D17D0927A4FDBAD18089F /* events */,
                            581747EBED464D69A8DFA106 /* fsaa */,
                            193C5DEA84504A5389435C9B /* gamma */,
                            B851538CB21344A2A49E58BF /* glfwinfo */,
                            F75CCEB29D4E423BAF7E36ED /* iconify */,
                            09EA6F422D734B9AAAD28CFC /* joysticks */,
                            5CAE3657D85D467484145D50 /* modes */,
                            4BC01880C619409DA9FB8FD2 /* peter */,
                            32C3EAF8A53D4436A23C5EF5 /* reopen */,
                            D926D1FD9988438DB1049682 /* sharing */,
                            2C0EA26F4FF247288B50BEEC /* tearing */,
                            78554724D0B74EC78F6E328A /* threads */,
                            3CAB4EA747C148FEAC0FEA9A /* title */,
                            39DC181A1F5644AE978CB211 /* windows */,
                     );
              };
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
              17E6435DC76F48A381359705 /*  */ = {
                     isa = PBXShellScriptBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                     );
                     inputPaths = (
                     );
                     outputPaths = (
                     );
                     runOnlyForDeploymentPostprocessing = 0;
                     shellPath = /bin/sh;
                     shellScript = "# shell script goes here
exit 0";
                     showEnvVarsInLog = 0;
              };
              D94232E5826D42CC83DCE56E /* CMake Rules */ = {
                     isa = PBXShellScriptBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                     );
                     name = "CMake Rules";
                     runOnlyForDeploymentPostprocessing = 0;
                     shellPath = /bin/sh;
                     shellScript = "make -C /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3 -f /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/CMakeScripts/ALL_BUILD_cmakeRulesBuildPhase.make$CONFIGURATION all";
                     showEnvVarsInLog = 0;
              };
              A6D22768CAFB4A77B9543BD9 /*  */ = {
                     isa = PBXShellScriptBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                     );
                     inputPaths = (
                     );
                     outputPaths = (
                     );
                     runOnlyForDeploymentPostprocessing = 0;
                     shellPath = /bin/sh;
                     shellScript = "# shell script goes here
exit 0";
                     showEnvVarsInLog = 0;
              };
              6AF8C84C65954E31B3499C0C /* CMake Rules */ = {
                     isa = PBXShellScriptBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                     );
                     name = "CMake Rules";
                     runOnlyForDeploymentPostprocessing = 0;
                     shellPath = /bin/sh;
                     shellScript = "make -C /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3 -f /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/CMakeScripts/ZERO_CHECK_cmakeRulesBuildPhase.make$CONFIGURATION all";
                     showEnvVarsInLog = 0;
              };
              1965FA85C86C4106B96B635D /*  */ = {
                     isa = PBXShellScriptBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                     );
                     inputPaths = (
                     );
                     outputPaths = (
                     );
                     runOnlyForDeploymentPostprocessing = 0;
                     shellPath = /bin/sh;
                     shellScript = "# shell script goes here
exit 0";
                     showEnvVarsInLog = 0;
              };
              069CD46DB3684CFB9827541A /* CMake PostBuild Rules */ = {
                     isa = PBXShellScriptBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                     );
                     name = "CMake PostBuild Rules";
                     runOnlyForDeploymentPostprocessing = 0;
                     shellPath = /bin/sh;
                     shellScript = "make -C /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3 -f /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/CMakeScripts/install_postBuildPhase.make$CONFIGURATION all";
                     showEnvVarsInLog = 0;
              };
              CDADE6B4EA124E0386CF6152 /* CMake PostBuild Rules */ = {
                     isa = PBXShellScriptBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                     );
                     name = "CMake PostBuild Rules";
                     runOnlyForDeploymentPostprocessing = 0;
                     shellPath = /bin/sh;
                     shellScript = "make -C /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/src -f /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/src/CMakeScripts/GLFW_303_postBuildPhase.make$CONFIGURATION all";
                     showEnvVarsInLog = 0;
              };
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
              7D720D4CDF7B4B1DB07FE09F /* Sources */ = {
                     isa = PBXSourcesBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                            35E5614527C840DC8B2D7003 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/clipboard.c */,
                            AE43DC5058EB4449BAE30690 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_clipboard.m */,
                            797404AC69C84F9389B6CD86 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_gamma.c */,
                            EF0549E966B84AB181EC23C7 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_init.m */,
                            4512AE56EF0344C088DC1C07 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_joystick.m */,
                            1A9B77DD85B14785A67DE555 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_monitor.m */,
                            9718195DC1BC44419341F590 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_time.c */,
                            F95FA152908144DC94D3DBC2 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/cocoa_window.m */,
                            00868521671843B3912CBDFC /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/context.c */,
                            2D6D5F4243CF4F7FB6152B1D /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/gamma.c */,
                            0FFD15C07EDF4AB0B0DFFF00 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/init.c */,
                            748A776DFA6C4E63A6572B96 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/input.c */,
                            46443832E5A549DB8CC8DB91 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/joystick.c */,
                            D6FC8D247D224571A37FC02B /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/monitor.c */,
                            AD4BEFE16216439794938CAA /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/nsgl_context.m */,
                            AF09F895C8414F1B84740DC5 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/time.c */,
                            7EBBC28DF5734D11A9140CD7 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src/window.c */,
                     );
                     runOnlyForDeploymentPostprocessing = 0;
              };
              88BBC6D81B7D415287C796CB /* Sources */ = {
                     isa = PBXSourcesBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                            2FFC11013DDD4780BE9248AD /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/boing.c */,
                     );
                     runOnlyForDeploymentPostprocessing = 0;
              };
              C78A91DE7ADC4755849190B7 /* Sources */ = {
                     isa = PBXSourcesBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                            D29211CCF29C4920BB624444 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/gears.c */,
                     );
                     runOnlyForDeploymentPostprocessing = 0;
              };
              D756FFC755B34EB89A06BE0F /* Sources */ = {
                     isa = PBXSourcesBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                            C1DE12EE07F94C878393AEA5 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/simple.c */,
                     );
                     runOnlyForDeploymentPostprocessing = 0;
              };
              65AD0DBBDDE9406CACCBCE94 /* Sources */ = {
                     isa = PBXSourcesBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                            41E0CF62FFAE488EAF227E02 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/splitview.c */,
                     );
                     runOnlyForDeploymentPostprocessing = 0;
              };
              F6BB459409164F1C908939AC /* Sources */ = {
                     isa = PBXSourcesBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                            D1D50FB8CC364918AA8234F5 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/examples/wave.c */,
                     );
                     runOnlyForDeploymentPostprocessing = 0;
              };
              B7F618A34B654079B27F67EC /* Sources */ = {
                     isa = PBXSourcesBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                            DAFA36B7A64B4CEA91DB8855 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/accuracy.c */,
                     );
                     runOnlyForDeploymentPostprocessing = 0;
              };
              1119AADD4F9245C7B941B2CD /* Sources */ = {
                     isa = PBXSourcesBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                            76D885D521004303BDD8AA1C /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */,
                            E8B9D0977BEA4B62853E1170 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/clipboard.c */,
                     );
                     runOnlyForDeploymentPostprocessing = 0;
              };
              3F1BDEB0A8BA4777BF63ED6D /* Sources */ = {
                     isa = PBXSourcesBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                            93682890B8C641D0B6BB3D06 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/defaults.c */,
                     );
                     runOnlyForDeploymentPostprocessing = 0;
              };
              BD7D96CF10C5450FAEB02F6F /* Sources */ = {
                     isa = PBXSourcesBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                            B81E372015F54EA581845640 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/events.c */,
                     );
                     runOnlyForDeploymentPostprocessing = 0;
              };
              88C19280FB4D40BDB71DFCD3 /* Sources */ = {
                     isa = PBXSourcesBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                            0CAED6B3649B4782BF2BCAE9 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */,
                            A4B9283CF68C4B5FAE340B0A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/fsaa.c */,
                     );
                     runOnlyForDeploymentPostprocessing = 0;
              };
              0CEC3C4B78144127BD93F4F3 /* Sources */ = {
                     isa = PBXSourcesBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                            33CE0A2732094FC497989473 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */,
                            245B9520984C49CFA9E67C71 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/gamma.c */,
                     );
                     runOnlyForDeploymentPostprocessing = 0;
              };
              F52CC659FFAC4298B5BC5DA1 /* Sources */ = {
                     isa = PBXSourcesBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                            EC907FCA37B94515B054EC16 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */,
                            67F0112684124C23BAD40FA1 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/glfwinfo.c */,
                     );
                     runOnlyForDeploymentPostprocessing = 0;
              };
              6A07C528BD6D4257AA2390A3 /* Sources */ = {
                     isa = PBXSourcesBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                            6908A9D923FD479A81FCD1D1 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */,
                            351FF5732801418E83E7FDA3 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/iconify.c */,
                     );
                     runOnlyForDeploymentPostprocessing = 0;
              };
              85101F3AFECA4142BA73EF16 /* Sources */ = {
                     isa = PBXSourcesBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                            E3405EDF2D944C938C2011B0 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/joysticks.c */,
                     );
                     runOnlyForDeploymentPostprocessing = 0;
              };
              4FC3F349218B4EF1A5038DCE /* Sources */ = {
                     isa = PBXSourcesBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                            A1AE7E2081954B88805DA98C /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/getopt.c */,
                            574DACD16796416BBFF5B215 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/modes.c */,
                     );
                     runOnlyForDeploymentPostprocessing = 0;
              };
              029921A8A1F44CD091EF2E86 /* Sources */ = {
                     isa = PBXSourcesBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                            7F30DD7282564ADBA1A72A24 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/peter.c */,
                     );
                     runOnlyForDeploymentPostprocessing = 0;
              };
              BFECD3B20510442FB5E4885E /* Sources */ = {
                     isa = PBXSourcesBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                            DDC3206BF09746019767A49F /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/reopen.c */,
                     );
                     runOnlyForDeploymentPostprocessing = 0;
              };
              DD7BA4AA7D9A4273A3D72BD0 /* Sources */ = {
                     isa = PBXSourcesBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                            EE9B0862D5514A5C83E87F2A /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/sharing.c */,
                     );
                     runOnlyForDeploymentPostprocessing = 0;
              };
              A84738E07B6E4DC8BC461113 /* Sources */ = {
                     isa = PBXSourcesBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                            0E003B54CEFF43AE8FF6AA04 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/tearing.c */,
                     );
                     runOnlyForDeploymentPostprocessing = 0;
              };
              4BBB07F939A943D3B8B9881D /* Sources */ = {
                     isa = PBXSourcesBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                            D43A4B867977407ABFFD3F18 /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps/tinycthread.c */,
                            C1DBB5E9066D4DA39C995C9B /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/threads.c */,
                     );
                     runOnlyForDeploymentPostprocessing = 0;
              };
              13BFFAA84907468880C6BE39 /* Sources */ = {
                     isa = PBXSourcesBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                            BFFD4C6644EA4EF2AAF3F42F /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/title.c */,
                     );
                     runOnlyForDeploymentPostprocessing = 0;
              };
              3BDBB7A1D5F8428BAC4EFDD2 /* Sources */ = {
                     isa = PBXSourcesBuildPhase;
                     buildActionMask = 2147483647;
                     files = (
                            D6A50FF096324064954A40BA /* /Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/tests/windows.c */,
                     );
                     runOnlyForDeploymentPostprocessing = 0;
              };
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
              F51F00C8623C4E20A3642A12 /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = 8ECCD0ECAF2E483281DC4AB3 /* GLFW_303 */;
                     targetProxy = A69FBB1F848D47C4A2AFC77E /* PBXContainerItemProxy */;
              };
              E175020E85EF481F90A5E8D4 /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = 4281FC2F14144312AB172F78 /* Simple */;
                     targetProxy = 0CF149A76E59457FB5603BA1 /* PBXContainerItemProxy */;
              };
              27E1165070E64E4391E19044 /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = 99F8AA4910AD49759402FFFD /* Wave */;
                     targetProxy = 983192D2F57245DA98492ED2 /* PBXContainerItemProxy */;
              };
              BC7BA7AAE31545D0AA6E49A6 /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = D026F59EA005439AA5759970 /* Boing */;
                     targetProxy = 0DE57A12153E4434B62DA71D /* PBXContainerItemProxy */;
              };
              3A0E1FAD83B243738E181B56 /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = 488C77E650CF4E6989D45172 /* Split View */;
                     targetProxy = 3DF14BEAD82F4E3F8EA348B9 /* PBXContainerItemProxy */;
              };
              F308147CF6FD4833AE662E5F /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = 17CEE7F6E60843249859CBFC /* clipboard */;
                     targetProxy = 4440CFEA2CC144DAA5B770A6 /* PBXContainerItemProxy */;
              };
              4D762EE471AA4ED4B7C13CE1 /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = 6C4231DD046C416BB3D83DBB /* Gears */;
                     targetProxy = D928A1E0025741F78EB2FB87 /* PBXContainerItemProxy */;
              };
              943F185884604E51BDB3ABE2 /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = D926D1FD9988438DB1049682 /* sharing */;
                     targetProxy = 5CFD5BA8E2C94266BA271F25 /* PBXContainerItemProxy */;
              };
              B056037C5A784DFB9F34E2B1 /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = F75CCEB29D4E423BAF7E36ED /* iconify */;
                     targetProxy = CDB8FCCD90A34647A6A0A318 /* PBXContainerItemProxy */;
              };
              2FADC1626B2E4338BA50B28A /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = 09EA6F422D734B9AAAD28CFC /* joysticks */;
                     targetProxy = 6F033DF43A16472D823EFA8D /* PBXContainerItemProxy */;
              };
              C08D77E2FCCC4A84848C9CEC /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = 565FCA07EDD644728D3B8205 /* ZERO_CHECK */;
                     targetProxy = EF7EF59B220941E8B914C386 /* PBXContainerItemProxy */;
              };
              1F14BB33CDBA4EBD8F4C3036 /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = 32C3EAF8A53D4436A23C5EF5 /* reopen */;
                     targetProxy = 3535E96EC16F4C4690B12D63 /* PBXContainerItemProxy */;
              };
              B75DF6C9D0794C4AB0F30C13 /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = EE0F9327E72D4550B5978F70 /* accuracy */;
                     targetProxy = 44815CBFA8664A5A90888B7E /* PBXContainerItemProxy */;
              };
              A490241011364C198D9089F0 /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = CC1D47C6E963444B85EE735B /* defaults */;
                     targetProxy = F2DCD26FC8944ACC9E15BB89 /* PBXContainerItemProxy */;
              };
              9205E416DB49408F88E98604 /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = 4BC01880C619409DA9FB8FD2 /* peter */;
                     targetProxy = 8D937258AC504F05972F0D97 /* PBXContainerItemProxy */;
              };
              9F8D1CB7E7A34455B254AB35 /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = 4C5D17D0927A4FDBAD18089F /* events */;
                     targetProxy = AE09BE7564FE4161B48BFF42 /* PBXContainerItemProxy */;
              };
              C2819CD602AC48F48847FA68 /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = B851538CB21344A2A49E58BF /* glfwinfo */;
                     targetProxy = D1BF39BE7A2D4B709C45DD50 /* PBXContainerItemProxy */;
              };
              39A3C14FA9FD44B0AC8B0371 /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = 581747EBED464D69A8DFA106 /* fsaa */;
                     targetProxy = 712B7C70FDD1492F8794D000 /* PBXContainerItemProxy */;
              };
              0F0E1CBF44BB48809D5EED76 /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = 5CAE3657D85D467484145D50 /* modes */;
                     targetProxy = 206CBBE87E9F44DEAFE4E015 /* PBXContainerItemProxy */;
              };
              16442DB1131B4F5DBC3DB0A2 /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = 193C5DEA84504A5389435C9B /* gamma */;
                     targetProxy = D59360F7FD3C4D24BA981A86 /* PBXContainerItemProxy */;
              };
              34C50E5FC7AE4B6F8FC53D7A /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = 39DC181A1F5644AE978CB211 /* windows */;
                     targetProxy = F2E9369C7C27449DBE178FE1 /* PBXContainerItemProxy */;
              };
              E5C2902FC4144DD6909F055F /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = 3CAB4EA747C148FEAC0FEA9A /* title */;
                     targetProxy = D18880BEC4A94C7D9FD82D9E /* PBXContainerItemProxy */;
              };
              7817716A3F5341FAA26F55E6 /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = 2C0EA26F4FF247288B50BEEC /* tearing */;
                     targetProxy = 97CFE60592EF4B6B92517DEA /* PBXContainerItemProxy */;
              };
              22B3880C143D4E6DAB1178E9 /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = 78554724D0B74EC78F6E328A /* threads */;
                     targetProxy = 228D5F0391A84CFDBEA0421C /* PBXContainerItemProxy */;
              };
              4AE3E1F2C85140958330ECCA /* PBXTargetDependency */ = {
                     isa = PBXTargetDependency;
                     target = 7EBC3749A114474EA14E9D7A /* ALL_BUILD */;
                     targetProxy = 34DE542EFE6642F3A1BEB03F /* PBXContainerItemProxy */;
              };
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
              79409FBD9FDC464DA1842324 /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = "i386 x86_64";
                            SDKROOT = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/build";
                     };
                     name = Debug;
              };
              A6D842A3FCE84E5A8C895CF6 /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = "i386 x86_64";
                            SDKROOT = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/build";
                     };
                     name = Release;
              };
              98709A3A255F445D9519492A /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = "i386 x86_64";
                            SDKROOT = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/build";
                     };
                     name = MinSizeRel;
              };
              C734C1B3792A46D6AC14BEE8 /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = "i386 x86_64";
                            SDKROOT = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/build";
                     };
                     name = RelWithDebInfo;
              };
              7607E4378F414008916C588A /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            COMBINE_HIDPI_IMAGES = YES;
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            INSTALL_PATH = "";
                            OTHER_CFLAGS = "   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " ";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = ALL_BUILD;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              C70DAFB7DAFD43FFB414EB99 /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            COMBINE_HIDPI_IMAGES = YES;
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            INSTALL_PATH = "";
                            OTHER_CFLAGS = "   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " ";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = ALL_BUILD;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              6B704850214A49B1862C9C18 /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            COMBINE_HIDPI_IMAGES = YES;
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            INSTALL_PATH = "";
                            OTHER_CFLAGS = "   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " ";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = ALL_BUILD;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              90D19073A64A4823AC4AB20D /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            COMBINE_HIDPI_IMAGES = YES;
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            INSTALL_PATH = "";
                            OTHER_CFLAGS = "   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " ";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = ALL_BUILD;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              C90DDDDAE5CC45D4AD4357E3 /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            COMBINE_HIDPI_IMAGES = YES;
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            INSTALL_PATH = "";
                            OTHER_CFLAGS = "   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " ";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = ZERO_CHECK;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              3B5FCC96808646818B27B428 /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            COMBINE_HIDPI_IMAGES = YES;
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            INSTALL_PATH = "";
                            OTHER_CFLAGS = "   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " ";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = ZERO_CHECK;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              22FB3DB4E54047BFA1C4658E /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            COMBINE_HIDPI_IMAGES = YES;
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            INSTALL_PATH = "";
                            OTHER_CFLAGS = "   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " ";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = ZERO_CHECK;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              3598C153268C407DABF32298 /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            COMBINE_HIDPI_IMAGES = YES;
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            INSTALL_PATH = "";
                            OTHER_CFLAGS = "   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " ";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = ZERO_CHECK;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              E07A01DE2BB6446EA220B38F /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            INSTALL_PATH = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " ";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = install;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              1B161E166484456D85FF2FEF /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            INSTALL_PATH = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " ";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = install;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              ECCAE746CA554083A5C753D5 /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            INSTALL_PATH = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " ";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = install;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              F64CE52731204787A1EE8D58 /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            INSTALL_PATH = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " ";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = install;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              0BBA662B7DE94FFEB47DC382 /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            DYLIB_COMPATIBILITY_VERSION = "3.0.0";
                            DYLIB_CURRENT_VERSION = "3.0.0";
                            EXECUTABLE_PREFIX = lib;
                            EXECUTABLE_SUFFIX = ".dylib";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", GLFW_303_EXPORTS, TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src", "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/src", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            LIBRARY_STYLE = DYNAMIC;
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "   -fPIC  -fno-common   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -dynamiclib -Wl,-headerpad_max_install_names -install_name /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/src/Debug/libglfw.3.dylib  -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = "glfw.3.0";
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/src";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              69C0B69C444A4FB99727B6FD /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            DYLIB_COMPATIBILITY_VERSION = "3.0.0";
                            DYLIB_CURRENT_VERSION = "3.0.0";
                            EXECUTABLE_PREFIX = lib;
                            EXECUTABLE_SUFFIX = ".dylib";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 3;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", GLFW_303_EXPORTS, TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src", "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/src", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            LIBRARY_STYLE = DYNAMIC;
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG -fPIC  -fno-common   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -dynamiclib -Wl,-headerpad_max_install_names -install_name /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/src/Release/libglfw.3.dylib  -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = "glfw.3.0";
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/src";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              53C0B9B6ED9D40348A1E05BE /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            DYLIB_COMPATIBILITY_VERSION = "3.0.0";
                            DYLIB_CURRENT_VERSION = "3.0.0";
                            EXECUTABLE_PREFIX = lib;
                            EXECUTABLE_SUFFIX = ".dylib";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = s;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", GLFW_303_EXPORTS, TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src", "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/src", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            LIBRARY_STYLE = DYNAMIC;
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG -fPIC  -fno-common   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -dynamiclib -Wl,-headerpad_max_install_names -install_name /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/src/MinSizeRel/libglfw.3.dylib  -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = "glfw.3.0";
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/src";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              B75D57D0EDF54A4E837485CB /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            DYLIB_COMPATIBILITY_VERSION = "3.0.0";
                            DYLIB_CURRENT_VERSION = "3.0.0";
                            EXECUTABLE_PREFIX = lib;
                            EXECUTABLE_SUFFIX = ".dylib";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 2;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", GLFW_303_EXPORTS, TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/src", "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/src", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            LIBRARY_STYLE = DYNAMIC;
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "       -DNDEBUG -fPIC  -fno-common   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -dynamiclib -Wl,-headerpad_max_install_names -install_name /Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/src/RelWithDebInfo/libglfw.3.dylib  -framework Cocoa -framework OpenGL -framework IOKit -framework CoreFoundation";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = "glfw.3.0";
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/src";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              5BB1D9383E3545C5AEB62196 /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Boing.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "     -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = Boing;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              CF4A49DB26C549B799690383 /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 3;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Boing.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = Boing;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              3AD58A121BC146278FB46803 /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = s;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Boing.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = Boing;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              9182EF8EF5854E08AD4D131C /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 2;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Boing.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "       -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = Boing;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              9A6F8D9B5D084D6FBB184907 /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Gears.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "     -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = Gears;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              449C09354BAF481DB3486EBC /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 3;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Gears.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = Gears;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              B89F7166A3B04435B6A5130A /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = s;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Gears.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = Gears;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              B803354320F64F7CB61BFE92 /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 2;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Gears.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "       -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = Gears;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              7DB0F9B50C344EE792A0AAB3 /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Simple.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "     -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = Simple;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              93F8A8A3FA2C4B52A1ED3824 /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 3;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Simple.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = Simple;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              0B4CA43E6C364A08A1203403 /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = s;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Simple.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = Simple;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              F7F1932686C741DDBB690718 /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 2;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Simple.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "       -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = Simple;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              2CF855B205D24EFC8226B0F6 /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Split\ View.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "     -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = "Split View";
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              46148BCE09424FA39DD8D39D /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 3;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Split\ View.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = "Split View";
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              B2F1E5C37C174979B075F554 /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = s;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Split\ View.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = "Split View";
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              2B51ED70530E422EBD1ABB05 /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 2;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Split\ View.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "       -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = "Split View";
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              3A483F4C42F4441EA4CEF1BA /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Wave.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "     -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = Wave;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              1DE222E1984540FA8BF19D71 /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 3;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Wave.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = Wave;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              920134AB37984E64A50DEFA1 /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = s;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Wave.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = Wave;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              427FD88D3363468E8292847B /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 2;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples/CMakeFiles/Wave.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "       -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = Wave;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/examples";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              9962F1DB650342EBB796E1CA /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/accuracy.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "     -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = accuracy;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              E29420F7D3F04E82ADC32088 /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 3;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/accuracy.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = accuracy;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              09D2FE062A284A7AA89A2521 /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = s;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/accuracy.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = accuracy;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              0B3D17B4B1F94520A25A7157 /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 2;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/accuracy.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "       -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = accuracy;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              C4F228B2A95645009215F5CD /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "     -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = clipboard;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              DDAB5E136C054C8CB36FA5E7 /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 3;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = clipboard;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              AB22C94E784D4D018515C2DE /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = s;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = clipboard;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              B44FC730729D496999DB07E0 /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 2;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "       -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = clipboard;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              F8B88962D96C43559FCEA435 /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "     -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = defaults;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              BF7B6FD046D24D76BB69DE31 /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 3;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = defaults;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              F8418D8F57D34F6F94C88150 /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = s;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = defaults;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              536257F304CF4CE787313336 /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 2;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "       -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = defaults;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              66C4D6E8483E4C2EB4D98110 /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "     -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = events;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              C059DA15E7D546B49970FCB1 /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 3;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = events;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              B39E33A3E140489C8070F332 /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = s;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = events;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              6063E2D93AFC47DDBDEFA25E /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 2;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "       -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = events;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              8FFEF2B7E5004B77A1BEC4CB /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "     -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = fsaa;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              F2AB21D8121A4591AB68395E /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 3;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = fsaa;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              85FAC8D8A8164695B9DE21FE /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = s;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = fsaa;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              0F78AB0B08B14795BD66F31A /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 2;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "       -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = fsaa;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              86DB4A341F4E471E822C73AB /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "     -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = gamma;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              1B743690E65947B5AAB2A321 /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 3;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = gamma;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              FE22E1741400465B808861C2 /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = s;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = gamma;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              A17BAB933AE440ACAB9C8C60 /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 2;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "       -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = gamma;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              517788C2CA1E4831B087567F /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "     -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = glfwinfo;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              4A5D5CBF2D6B4047BA7B9154 /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 3;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = glfwinfo;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              EDEDE849B6784AE8B17BD188 /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = s;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = glfwinfo;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              B211272CCD3D458BA3C9F57F /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 2;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "       -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = glfwinfo;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              CC767B6CBFBD4A30AF615A5E /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "     -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = iconify;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              4C7583EAC39A4CA09EE74D52 /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 3;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = iconify;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              78561E210FA94DCE8D076D00 /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = s;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = iconify;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              637DEAE189DD4934ADD98931 /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 2;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "       -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = iconify;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              404E1155634B4705B035DB77 /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "     -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = joysticks;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              861207931FFD4A0ABFC242CD /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 3;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = joysticks;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              A4A212BAA88847CC90680378 /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = s;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = joysticks;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              AA5A727537174024A70F1E95 /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 2;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "       -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = joysticks;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              F245088F88404EB1AEA88FD0 /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "     -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = modes;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              D2BD4BE013BC496B91478C82 /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 3;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = modes;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              86AE1D2B2EF5435CAC6B4DEE /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = s;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = modes;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              69B7F8A4A26C418680584B24 /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 2;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "       -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = modes;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              F253D982FDA044269D3D7248 /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "     -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = peter;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              5439C2E381294A43AA653757 /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 3;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = peter;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              FD246179529345B9B24BE38B /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = s;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = peter;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              230F7250645345EABAEF1872 /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 2;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "       -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = peter;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              8E249447C8A646C18C2F81C1 /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "     -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = reopen;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              4BA544ABD7CE4F93B5FBF243 /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 3;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = reopen;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              2262471605B545C2B8524FD6 /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = s;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = reopen;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              5183A0FC52944E7FBE6325CD /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 2;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "       -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = reopen;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              C2CAC51F91D84136B740783D /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/sharing.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "     -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = sharing;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              E366D2DA1D3E4CD68F2990D7 /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 3;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/sharing.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = sharing;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              72DF1648F7384A158BE44BD3 /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = s;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/sharing.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = sharing;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              93A918436FEE47BE8FAC4381 /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 2;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/sharing.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "       -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = sharing;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              D081D3EDD5D343108AEF5CA7 /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/tearing.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "     -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = tearing;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              55EB349C1A03450C80F5BB43 /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 3;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/tearing.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = tearing;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              214C33486C5547F2AC910084 /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = s;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/tearing.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = tearing;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              480FAF497A154A2BB263A666 /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 2;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/tearing.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "       -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = tearing;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              77C25F91E41148FB96754432 /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/threads.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "     -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = threads;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              9DA2124AEE0C49EE8CD08C9B /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 3;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/threads.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = threads;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              8837F00ABC904AB19D4BCF95 /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = s;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/threads.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = threads;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              DEEE3828E590417BB0B8F5C1 /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 2;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/threads.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "       -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = threads;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              67CE300AF0CD469991877F05 /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/title.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "     -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = title;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              44F3EFD17F024B2EB6F42C1F /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 3;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/title.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = title;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              5E5DCBA6F6B84018A89EDD99 /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = s;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/title.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = title;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              1277F3740B5F4BD782AE2B6E /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 2;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/title.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "       -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = title;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
              EA8A4B7ACC184434BEEA326E /* Debug */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 0;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/windows.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "     -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = windows;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Debug;
              };
              7761C512DEED41D8A686889A /* Release */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 3;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/windows.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = windows;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = Release;
              };
              C65C83385FBB48B18D32DC51 /* MinSizeRel */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = NO;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = s;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/windows.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "    -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = windows;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = MinSizeRel;
              };
              ADA5319EC8514993AD38796B /* RelWithDebInfo */ = {
                     isa = XCBuildConfiguration;
                     buildSettings = {
                            ARCHS = (i386, x86_64, );
                            COMBINE_HIDPI_IMAGES = YES;
                            EXECUTABLE_PREFIX = "";
                            EXECUTABLE_SUFFIX = "";
                            GCC_GENERATE_DEBUGGING_SYMBOLS = YES;
                            GCC_INLINES_ARE_PRIVATE_EXTERN = NO;
                            GCC_OPTIMIZATION_LEVEL = 2;
                            GCC_PREPROCESSOR_DEFINITIONS = ("'CMAKE_INTDIR=\"$(CONFIGURATION)$(EFFECTIVE_PLATFORM_NAME)\"'", TW_STATIC, TW_NO_LIB_PRAGMA, TW_NO_DIRECT3D, GLEW_STATIC, _CRT_SECURE_NO_WARNINGS, GLFW_DLL, );
                            GCC_SYMBOLS_PRIVATE_EXTERN = NO;
                            HEADER_SEARCH_PATHS = ("/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/include", "/Users/seb/GitHub/opengl-tutorial-org/external/glfw-3.0.3/deps", );
                            INFOPLIST_FILE = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests/CMakeFiles/windows.dir/Info.plist";
                            INSTALL_PATH = "";
                            LIBRARY_SEARCH_PATHS = "";
                            ONLY_ACTIVE_ARCH = NO;
                            OTHER_CFLAGS = "       -DNDEBUG   -Wall -fvisibility=hidden";
                            OTHER_LDFLAGS = " -Wl,-search_paths_first -Wl,-headerpad_max_install_names  -lglfw -framework AGL -framework OpenGL";
                            OTHER_REZFLAGS = "";
                            PRODUCT_NAME = windows;
                            SECTORDER_FLAGS = "";
                            SYMROOT = "/Users/seb/GitHub/opengl-tutorial-org/builds6/external/glfw-3.0.3/tests";
                            USE_HEADERMAP = NO;
                            WARNING_CFLAGS = ("-Wmost", "-Wno-four-char-constants", "-Wno-unknown-pragmas", "$(inherited)", );
                     };
                     name = RelWithDebInfo;
              };
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
              0BCF3FADEA8348BCA8B0E910 /* Build configuration list for PBXProject  "GLFW" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            79409FBD9FDC464DA1842324 /* Debug */,
                            A6D842A3FCE84E5A8C895CF6 /* Release */,
                            98709A3A255F445D9519492A /* MinSizeRel */,
                            C734C1B3792A46D6AC14BEE8 /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              B20461FC886049B4BB9853F3 /* Build configuration list for PBXAggregateTarget "ALL_BUILD" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            7607E4378F414008916C588A /* Debug */,
                            C70DAFB7DAFD43FFB414EB99 /* Release */,
                            6B704850214A49B1862C9C18 /* MinSizeRel */,
                            90D19073A64A4823AC4AB20D /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              EAC14C2A29AA4D27AF4F03BB /* Build configuration list for PBXAggregateTarget "ZERO_CHECK" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            C90DDDDAE5CC45D4AD4357E3 /* Debug */,
                            3B5FCC96808646818B27B428 /* Release */,
                            22FB3DB4E54047BFA1C4658E /* MinSizeRel */,
                            3598C153268C407DABF32298 /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              793A34ACA662454E8948B306 /* Build configuration list for PBXAggregateTarget "install" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            E07A01DE2BB6446EA220B38F /* Debug */,
                            1B161E166484456D85FF2FEF /* Release */,
                            ECCAE746CA554083A5C753D5 /* MinSizeRel */,
                            F64CE52731204787A1EE8D58 /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              E34CC8A60C894BAE99A76F91 /* Build configuration list for PBXNativeTarget "GLFW_303" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            0BBA662B7DE94FFEB47DC382 /* Debug */,
                            69C0B69C444A4FB99727B6FD /* Release */,
                            53C0B9B6ED9D40348A1E05BE /* MinSizeRel */,
                            B75D57D0EDF54A4E837485CB /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              C23F0FBABEF247EB829C7ACA /* Build configuration list for PBXNativeTarget "Boing" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            5BB1D9383E3545C5AEB62196 /* Debug */,
                            CF4A49DB26C549B799690383 /* Release */,
                            3AD58A121BC146278FB46803 /* MinSizeRel */,
                            9182EF8EF5854E08AD4D131C /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              CF318CB9E8194E229021C976 /* Build configuration list for PBXNativeTarget "Gears" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            9A6F8D9B5D084D6FBB184907 /* Debug */,
                            449C09354BAF481DB3486EBC /* Release */,
                            B89F7166A3B04435B6A5130A /* MinSizeRel */,
                            B803354320F64F7CB61BFE92 /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              CF903CDC22D9481088E47D3A /* Build configuration list for PBXNativeTarget "Simple" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            7DB0F9B50C344EE792A0AAB3 /* Debug */,
                            93F8A8A3FA2C4B52A1ED3824 /* Release */,
                            0B4CA43E6C364A08A1203403 /* MinSizeRel */,
                            F7F1932686C741DDBB690718 /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              0C758CD6CE9E409C8A1D01DA /* Build configuration list for PBXNativeTarget "Split View" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            2CF855B205D24EFC8226B0F6 /* Debug */,
                            46148BCE09424FA39DD8D39D /* Release */,
                            B2F1E5C37C174979B075F554 /* MinSizeRel */,
                            2B51ED70530E422EBD1ABB05 /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              474695901C9B4A0FBE48484E /* Build configuration list for PBXNativeTarget "Wave" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            3A483F4C42F4441EA4CEF1BA /* Debug */,
                            1DE222E1984540FA8BF19D71 /* Release */,
                            920134AB37984E64A50DEFA1 /* MinSizeRel */,
                            427FD88D3363468E8292847B /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              D5AF28A489144FB799492669 /* Build configuration list for PBXNativeTarget "accuracy" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            9962F1DB650342EBB796E1CA /* Debug */,
                            E29420F7D3F04E82ADC32088 /* Release */,
                            09D2FE062A284A7AA89A2521 /* MinSizeRel */,
                            0B3D17B4B1F94520A25A7157 /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              CC6921AEFCCA4719ACF61808 /* Build configuration list for PBXNativeTarget "clipboard" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            C4F228B2A95645009215F5CD /* Debug */,
                            DDAB5E136C054C8CB36FA5E7 /* Release */,
                            AB22C94E784D4D018515C2DE /* MinSizeRel */,
                            B44FC730729D496999DB07E0 /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              0250185ADFBE4C82AB416529 /* Build configuration list for PBXNativeTarget "defaults" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            F8B88962D96C43559FCEA435 /* Debug */,
                            BF7B6FD046D24D76BB69DE31 /* Release */,
                            F8418D8F57D34F6F94C88150 /* MinSizeRel */,
                            536257F304CF4CE787313336 /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              12DA573F9915443DB1D33133 /* Build configuration list for PBXNativeTarget "events" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            66C4D6E8483E4C2EB4D98110 /* Debug */,
                            C059DA15E7D546B49970FCB1 /* Release */,
                            B39E33A3E140489C8070F332 /* MinSizeRel */,
                            6063E2D93AFC47DDBDEFA25E /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              5E865E6038DC469F971431FA /* Build configuration list for PBXNativeTarget "fsaa" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            8FFEF2B7E5004B77A1BEC4CB /* Debug */,
                            F2AB21D8121A4591AB68395E /* Release */,
                            85FAC8D8A8164695B9DE21FE /* MinSizeRel */,
                            0F78AB0B08B14795BD66F31A /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              B979EBC2D2E6427AB91FE912 /* Build configuration list for PBXNativeTarget "gamma" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            86DB4A341F4E471E822C73AB /* Debug */,
                            1B743690E65947B5AAB2A321 /* Release */,
                            FE22E1741400465B808861C2 /* MinSizeRel */,
                            A17BAB933AE440ACAB9C8C60 /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              2140F29891F44A2C96B7C7E8 /* Build configuration list for PBXNativeTarget "glfwinfo" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            517788C2CA1E4831B087567F /* Debug */,
                            4A5D5CBF2D6B4047BA7B9154 /* Release */,
                            EDEDE849B6784AE8B17BD188 /* MinSizeRel */,
                            B211272CCD3D458BA3C9F57F /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              15E8A90C97DF4574826E5AD4 /* Build configuration list for PBXNativeTarget "iconify" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            CC767B6CBFBD4A30AF615A5E /* Debug */,
                            4C7583EAC39A4CA09EE74D52 /* Release */,
                            78561E210FA94DCE8D076D00 /* MinSizeRel */,
                            637DEAE189DD4934ADD98931 /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              45A8E0CD77ED4F3EA188F7A5 /* Build configuration list for PBXNativeTarget "joysticks" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            404E1155634B4705B035DB77 /* Debug */,
                            861207931FFD4A0ABFC242CD /* Release */,
                            A4A212BAA88847CC90680378 /* MinSizeRel */,
                            AA5A727537174024A70F1E95 /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              D688FA3B7E7F476D99F2EF19 /* Build configuration list for PBXNativeTarget "modes" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            F245088F88404EB1AEA88FD0 /* Debug */,
                            D2BD4BE013BC496B91478C82 /* Release */,
                            86AE1D2B2EF5435CAC6B4DEE /* MinSizeRel */,
                            69B7F8A4A26C418680584B24 /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              D0A7E90E21BC490A853CCD76 /* Build configuration list for PBXNativeTarget "peter" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            F253D982FDA044269D3D7248 /* Debug */,
                            5439C2E381294A43AA653757 /* Release */,
                            FD246179529345B9B24BE38B /* MinSizeRel */,
                            230F7250645345EABAEF1872 /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              9F33574A0210488DA37EDBAB /* Build configuration list for PBXNativeTarget "reopen" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            8E249447C8A646C18C2F81C1 /* Debug */,
                            4BA544ABD7CE4F93B5FBF243 /* Release */,
                            2262471605B545C2B8524FD6 /* MinSizeRel */,
                            5183A0FC52944E7FBE6325CD /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              6A928742C5C5470483275313 /* Build configuration list for PBXNativeTarget "sharing" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            C2CAC51F91D84136B740783D /* Debug */,
                            E366D2DA1D3E4CD68F2990D7 /* Release */,
                            72DF1648F7384A158BE44BD3 /* MinSizeRel */,
                            93A918436FEE47BE8FAC4381 /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              1AFF0C38EF9349A6989BE76C /* Build configuration list for PBXNativeTarget "tearing" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            D081D3EDD5D343108AEF5CA7 /* Debug */,
                            55EB349C1A03450C80F5BB43 /* Release */,
                            214C33486C5547F2AC910084 /* MinSizeRel */,
                            480FAF497A154A2BB263A666 /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              958D2C419A2D4DA5964493F5 /* Build configuration list for PBXNativeTarget "threads" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            77C25F91E41148FB96754432 /* Debug */,
                            9DA2124AEE0C49EE8CD08C9B /* Release */,
                            8837F00ABC904AB19D4BCF95 /* MinSizeRel */,
                            DEEE3828E590417BB0B8F5C1 /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              EA63FA88623D4A2E8B5C6128 /* Build configuration list for PBXNativeTarget "title" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            67CE300AF0CD469991877F05 /* Debug */,
                            44F3EFD17F024B2EB6F42C1F /* Release */,
                            5E5DCBA6F6B84018A89EDD99 /* MinSizeRel */,
                            1277F3740B5F4BD782AE2B6E /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
              B1B172CDC6AD49C5975F88E5 /* Build configuration list for PBXNativeTarget "windows" */ = {
                     isa = XCConfigurationList;
                     buildConfigurations = (
                            EA8A4B7ACC184434BEEA326E /* Debug */,
                            7761C512DEED41D8A686889A /* Release */,
                            C65C83385FBB48B18D32DC51 /* MinSizeRel */,
                            ADA5319EC8514993AD38796B /* RelWithDebInfo */,
                     );
                     defaultConfigurationIsVisible = 0;
                     defaultConfigurationName = Debug;
              };
/* End XCConfigurationList section */
       };
       rootObject = 01F578298CE24865A1E68741;
}
